

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun May 21 15:58:31 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,inline,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     0091                     	;# 
   118     0092                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0098                     	;# 
   122     0099                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     010C                     	;# 
   128     010D                     	;# 
   129     010E                     	;# 
   130     010F                     	;# 
   131     018C                     	;# 
   132     018D                     	;# 
   133     0000                     	;# 
   134     0001                     	;# 
   135     0002                     	;# 
   136     0003                     	;# 
   137     0004                     	;# 
   138     0005                     	;# 
   139     0006                     	;# 
   140     0007                     	;# 
   141     0008                     	;# 
   142     0009                     	;# 
   143     000A                     	;# 
   144     000B                     	;# 
   145     000C                     	;# 
   146     000D                     	;# 
   147     000E                     	;# 
   148     000E                     	;# 
   149     000F                     	;# 
   150     0010                     	;# 
   151     0011                     	;# 
   152     0012                     	;# 
   153     0013                     	;# 
   154     0014                     	;# 
   155     0015                     	;# 
   156     0015                     	;# 
   157     0016                     	;# 
   158     0017                     	;# 
   159     0018                     	;# 
   160     0019                     	;# 
   161     001A                     	;# 
   162     001B                     	;# 
   163     001B                     	;# 
   164     001C                     	;# 
   165     001D                     	;# 
   166     001E                     	;# 
   167     001F                     	;# 
   168     0081                     	;# 
   169     0085                     	;# 
   170     0086                     	;# 
   171     0087                     	;# 
   172     0088                     	;# 
   173     0089                     	;# 
   174     008C                     	;# 
   175     008D                     	;# 
   176     008E                     	;# 
   177     0091                     	;# 
   178     0092                     	;# 
   179     0093                     	;# 
   180     0094                     	;# 
   181     0098                     	;# 
   182     0099                     	;# 
   183     009C                     	;# 
   184     009D                     	;# 
   185     009E                     	;# 
   186     009F                     	;# 
   187     010C                     	;# 
   188     010D                     	;# 
   189     010E                     	;# 
   190     010F                     	;# 
   191     018C                     	;# 
   192     018D                     	;# 
   193                           
   194                           	psect	idataBANK0
   195     02B7                     __pidataBANK0:
   196                           
   197                           ;initializer for __SIM900_waitResponse@F1194
   198     02B7  34D5               	retlw	low ((STR_3-__stringbase)| (0+32768))
   199     02B8  3488               	retlw	low ((STR_4-__stringbase)| (0+32768))
   200     02B9  34C5               	retlw	low ((STR_5-__stringbase)| (0+32768))
   201     02BA  34D0               	retlw	low ((STR_6-__stringbase)| (0+32768))
   202     02BB  34AC               	retlw	low ((STR_7-__stringbase)| (0+32768))
   203     02BC  34BE               	retlw	low ((STR_8-__stringbase)| (0+32768))
   204                           
   205                           ;initializer for _p
   206     02BD  3401               	retlw	1
   207                           
   208                           	psect	strings
   209     0003                     __pstrings:
   210     0003                     stringtab:
   211     0003                     __stringtab:
   212                           
   213                           ;	String table - string pointers are 1 byte each
   214     0003  1BFF               	btfsc	btemp+1,7
   215     0004  280D               	ljmp	stringcode
   216     0005  1383               	bcf	3,7
   217     0006  187F               	btfsc	btemp+1,0
   218     0007  1783               	bsf	3,7
   219     0008  0800               	movf	0,w
   220     0009  0A84               	incf	4,f
   221     000A  1903               	skipnz
   222     000B  0AFF               	incf	btemp+1,f
   223     000C  0008               	return
   224     000D                     stringcode:
   225     000D                     stringdir:
   226     000D  3000               	movlw	high stringdir
   227     000E  008A               	movwf	10
   228     000F  0804               	movf	4,w
   229     0010  0A84               	incf	4,f
   230     0011  0782               	addwf	2,f
   231     0012                     __stringbase:
   232     0012  3400               	retlw	0
   233     0013                     __end_of__stringtab:
   234     0013                     __SIM900_waitResponse@responses:
   235     0013  3401               	retlw	1
   236     0014  3402               	retlw	2
   237     0015  3403               	retlw	3
   238     0016  3404               	retlw	4
   239     0017  3405               	retlw	5
   240     0018  3406               	retlw	6
   241     0019                     __end_of__SIM900_waitResponse@responses:
   242     0019                     __SIM900_waitResponse@lengths:
   243     0019  3402               	retlw	2
   244     001A  340C               	retlw	12
   245     001B  3405               	retlw	5
   246     001C  3404               	retlw	4
   247     001D  3406               	retlw	6
   248     001E  3406               	retlw	6
   249     001F                     __end_of__SIM900_waitResponse@lengths:
   250     001A                     _RCREG	set	26
   251     0019                     _TXREG	set	25
   252     0065                     _RCIF	set	101
   253     00C1                     _OERR	set	193
   254     0064                     _TXIF	set	100
   255     00C6                     _RX9	set	198
   256     00C4                     _CREN	set	196
   257     00C7                     _SPEN	set	199
   258     0043                     _RD3	set	67
   259     0042                     _RD2	set	66
   260     0047                     _RD7	set	71
   261     0046                     _RD6	set	70
   262     0045                     _RD5	set	69
   263     0044                     _RD4	set	68
   264     0088                     _TRISD	set	136
   265     0099                     _SPBRG	set	153
   266     04C6                     _TX9	set	1222
   267     04C5                     _TXEN	set	1221
   268     04C4                     _SYNC	set	1220
   269     04C2                     _BRGH	set	1218
   270     043F                     _TRISC7	set	1087
   271     043E                     _TRISC6	set	1086
   272     001F                     STR_18:
   273     001F  3441               	retlw	65	;'A'
   274     0020  3454               	retlw	84	;'T'
   275     0021  342B               	retlw	43	;'+'
   276     0022  3443               	retlw	67	;'C'
   277     0023  344E               	retlw	78	;'N'
   278     0024  344D               	retlw	77	;'M'
   279     0025  3449               	retlw	73	;'I'
   280     0026  343D               	retlw	61	;'='
   281     0027  3431               	retlw	49	;'1'
   282     0028  342C               	retlw	44	;','
   283     0029  3432               	retlw	50	;'2'
   284     002A  342C               	retlw	44	;','
   285     002B  3430               	retlw	48	;'0'
   286     002C  342C               	retlw	44	;','
   287     002D  3430               	retlw	48	;'0'
   288     002E  342C               	retlw	44	;','
   289     002F  3430               	retlw	48	;'0'
   290     0030  340D               	retlw	13
   291     0031  340A               	retlw	10
   292     0032  3400               	retlw	0
   293     0033                     STR_14:
   294     0033  3457               	retlw	87	;'W'
   295     0034  3461               	retlw	97	;'a'
   296     0035  3469               	retlw	105	;'i'
   297     0036  3474               	retlw	116	;'t'
   298     0037  3469               	retlw	105	;'i'
   299     0038  346E               	retlw	110	;'n'
   300     0039  3467               	retlw	103	;'g'
   301     003A  3420               	retlw	32	;' '
   302     003B  3466               	retlw	102	;'f'
   303     003C  346F               	retlw	111	;'o'
   304     003D  3472               	retlw	114	;'r'
   305     003E  3420               	retlw	32	;' '
   306     003F  346D               	retlw	109	;'m'
   307     0040  3473               	retlw	115	;'s'
   308     0041  3467               	retlw	103	;'g'
   309     0042  342E               	retlw	46	;'.'
   310     0043  342E               	retlw	46	;'.'
   311     0044  3400               	retlw	0
   312     0045                     STR_9:
   313     0045  3453               	retlw	83	;'S'
   314     0046  3449               	retlw	73	;'I'
   315     0047  344D               	retlw	77	;'M'
   316     0048  3439               	retlw	57	;'9'
   317     0049  3430               	retlw	48	;'0'
   318     004A  3430               	retlw	48	;'0'
   319     004B  3420               	retlw	32	;' '
   320     004C  3426               	retlw	38	;'&'
   321     004D  3420               	retlw	32	;' '
   322     004E  3450               	retlw	80	;'P'
   323     004F  3449               	retlw	73	;'I'
   324     0050  3443               	retlw	67	;'C'
   325     0051  3420               	retlw	32	;' '
   326     0052  3420               	retlw	32	;' '
   327     0053  3420               	retlw	32	;' '
   328     0054  3420               	retlw	32	;' '
   329     0055  3400               	retlw	0
   330     0056                     STR_13:
   331     0056  3453               	retlw	83	;'S'
   332     0057  3449               	retlw	73	;'I'
   333     0058  344D               	retlw	77	;'M'
   334     0059  3420               	retlw	32	;' '
   335     005A  3444               	retlw	68	;'D'
   336     005B  3465               	retlw	101	;'e'
   337     005C  3474               	retlw	116	;'t'
   338     005D  3465               	retlw	101	;'e'
   339     005E  3463               	retlw	99	;'c'
   340     005F  3474               	retlw	116	;'t'
   341     0060  3465               	retlw	101	;'e'
   342     0061  3464               	retlw	100	;'d'
   343     0062  3420               	retlw	32	;' '
   344     0063  3420               	retlw	32	;' '
   345     0064  3420               	retlw	32	;' '
   346     0065  3420               	retlw	32	;' '
   347     0066  3400               	retlw	0
   348     0067                     STR_12:
   349     0067  3453               	retlw	83	;'S'
   350     0068  3449               	retlw	73	;'I'
   351     0069  344D               	retlw	77	;'M'
   352     006A  3420               	retlw	32	;' '
   353     006B  346E               	retlw	110	;'n'
   354     006C  346F               	retlw	111	;'o'
   355     006D  3474               	retlw	116	;'t'
   356     006E  3420               	retlw	32	;' '
   357     006F  3466               	retlw	102	;'f'
   358     0070  346F               	retlw	111	;'o'
   359     0071  3475               	retlw	117	;'u'
   360     0072  346E               	retlw	110	;'n'
   361     0073  3464               	retlw	100	;'d'
   362     0074  3420               	retlw	32	;' '
   363     0075  3420               	retlw	32	;' '
   364     0076  3420               	retlw	32	;' '
   365     0077  3400               	retlw	0
   366     0078                     STR_11:
   367     0078  344D               	retlw	77	;'M'
   368     0079  346F               	retlw	111	;'o'
   369     007A  3464               	retlw	100	;'d'
   370     007B  3475               	retlw	117	;'u'
   371     007C  346C               	retlw	108	;'l'
   372     007D  3465               	retlw	101	;'e'
   373     007E  3420               	retlw	32	;' '
   374     007F  3444               	retlw	68	;'D'
   375     0080  3465               	retlw	101	;'e'
   376     0081  3474               	retlw	116	;'t'
   377     0082  3465               	retlw	101	;'e'
   378     0083  3463               	retlw	99	;'c'
   379     0084  3474               	retlw	116	;'t'
   380     0085  3465               	retlw	101	;'e'
   381     0086  3464               	retlw	100	;'d'
   382     0087  3420               	retlw	32	;' '
   383     0088  3400               	retlw	0
   384     0089                     STR_10:
   385     0089  344D               	retlw	77	;'M'
   386     008A  346F               	retlw	111	;'o'
   387     008B  3464               	retlw	100	;'d'
   388     008C  3475               	retlw	117	;'u'
   389     008D  346C               	retlw	108	;'l'
   390     008E  3465               	retlw	101	;'e'
   391     008F  3420               	retlw	32	;' '
   392     0090  346E               	retlw	110	;'n'
   393     0091  346F               	retlw	111	;'o'
   394     0092  3474               	retlw	116	;'t'
   395     0093  3420               	retlw	32	;' '
   396     0094  3466               	retlw	102	;'f'
   397     0095  346F               	retlw	111	;'o'
   398     0096  3475               	retlw	117	;'u'
   399     0097  346E               	retlw	110	;'n'
   400     0098  3464               	retlw	100	;'d'
   401     0099  3400               	retlw	0
   402     009A                     STR_4:
   403     009A  342B               	retlw	43	;'+'
   404     009B  3443               	retlw	67	;'C'
   405     009C  3450               	retlw	80	;'P'
   406     009D  3449               	retlw	73	;'I'
   407     009E  344E               	retlw	78	;'N'
   408     009F  343A               	retlw	58	;':'
   409     00A0  3420               	retlw	32	;' '
   410     00A1  3452               	retlw	82	;'R'
   411     00A2  3445               	retlw	69	;'E'
   412     00A3  3441               	retlw	65	;'A'
   413     00A4  3444               	retlw	68	;'D'
   414     00A5  3459               	retlw	89	;'Y'
   415     00A6  3400               	retlw	0
   416     00A7                     STR_17:
   417     00A7  3441               	retlw	65	;'A'
   418     00A8  3454               	retlw	84	;'T'
   419     00A9  342B               	retlw	43	;'+'
   420     00AA  3443               	retlw	67	;'C'
   421     00AB  344D               	retlw	77	;'M'
   422     00AC  3447               	retlw	71	;'G'
   423     00AD  3446               	retlw	70	;'F'
   424     00AE  343D               	retlw	61	;'='
   425     00AF  3431               	retlw	49	;'1'
   426     00B0  340D               	retlw	13
   427     00B1  340A               	retlw	10
   428     00B2  3400               	retlw	0
   429     00B3                     STR_2:
   430     00B3  3441               	retlw	65	;'A'
   431     00B4  3454               	retlw	84	;'T'
   432     00B5  342B               	retlw	43	;'+'
   433     00B6  3443               	retlw	67	;'C'
   434     00B7  3450               	retlw	80	;'P'
   435     00B8  3449               	retlw	73	;'I'
   436     00B9  344E               	retlw	78	;'N'
   437     00BA  343F               	retlw	63	;'?'
   438     00BB  340D               	retlw	13
   439     00BC  340A               	retlw	10
   440     00BD  3400               	retlw	0
   441     00BE                     STR_7:
   442     00BE  344E               	retlw	78	;'N'
   443     00BF  344F               	retlw	79	;'O'
   444     00C0  3420               	retlw	32	;' '
   445     00C1  3443               	retlw	67	;'C'
   446     00C2  3441               	retlw	65	;'A'
   447     00C3  3452               	retlw	82	;'R'
   448     00C4  3452               	retlw	82	;'R'
   449     00C5  3449               	retlw	73	;'I'
   450     00C6  3445               	retlw	69	;'E'
   451     00C7  3452               	retlw	82	;'R'
   452     00C8  3400               	retlw	0
   453     00C9                     STR_15:
   454     00C9  3441               	retlw	65	;'A'
   455     00CA  3454               	retlw	84	;'T'
   456     00CB  3445               	retlw	69	;'E'
   457     00CC  3430               	retlw	48	;'0'
   458     00CD  340D               	retlw	13
   459     00CE  340A               	retlw	10
   460     00CF  3400               	retlw	0
   461     00D0                     STR_8:
   462     00D0  3455               	retlw	85	;'U'
   463     00D1  346E               	retlw	110	;'n'
   464     00D2  346C               	retlw	108	;'l'
   465     00D3  3469               	retlw	105	;'i'
   466     00D4  346E               	retlw	110	;'n'
   467     00D5  346B               	retlw	107	;'k'
   468     00D6  3400               	retlw	0
   469     00D7                     STR_5:
   470     00D7  3445               	retlw	69	;'E'
   471     00D8  3452               	retlw	82	;'R'
   472     00D9  3452               	retlw	82	;'R'
   473     00DA  344F               	retlw	79	;'O'
   474     00DB  3452               	retlw	82	;'R'
   475     00DC  3400               	retlw	0
   476     00DD                     STR_1:
   477     00DD  3441               	retlw	65	;'A'
   478     00DE  3454               	retlw	84	;'T'
   479     00DF  340D               	retlw	13
   480     00E0  340A               	retlw	10
   481     00E1  3400               	retlw	0
   482     00E2                     STR_6:
   483     00E2  3452               	retlw	82	;'R'
   484     00E3  3449               	retlw	73	;'I'
   485     00E4  344E               	retlw	78	;'N'
   486     00E5  3447               	retlw	71	;'G'
   487     00E6  3400               	retlw	0
   488     00E7                     STR_3:
   489     00E7  344F               	retlw	79	;'O'
   490     00E8  344B               	retlw	75	;'K'
   491     00E9  3400               	retlw	0
   492     0032                     
   493                           	psect	cinit
   494     07D4                     start_initialization:	
   495                           ; #config settings
   496                           
   497     07D4                     __initialization:
   498                           
   499                           ; Initialize objects allocated to BANK0
   500     07D4  1383               	bcf	3,7	;select IRP bank0
   501     07D5  305E               	movlw	low (__pdataBANK0+7)
   502     07D6  00FD               	movwf	btemp+-1
   503     07D7  3002               	movlw	high __pidataBANK0
   504     07D8  00FE               	movwf	btemp
   505     07D9  30B7               	movlw	low __pidataBANK0
   506     07DA  00FF               	movwf	btemp+1
   507     07DB  3057               	movlw	low __pdataBANK0
   508     07DC  0084               	movwf	4
   509     07DD  120A  118A  22EF  120A  118A  	fcall	init_ram0
   510                           
   511                           ; Clear objects allocated to BANK3
   512     07E2  1783               	bsf	3,7	;select IRP bank2
   513     07E3  3090               	movlw	low __pbssBANK3
   514     07E4  0084               	movwf	4
   515     07E5  30CC               	movlw	low (__pbssBANK3+60)
   516     07E6  120A  118A  22BE  120A  118A  	fcall	clear_ram0
   517                           
   518                           ; Clear objects allocated to BANK1
   519     07EB  1383               	bcf	3,7	;select IRP bank0
   520     07EC  30A0               	movlw	low __pbssBANK1
   521     07ED  0084               	movwf	4
   522     07EE  30C8               	movlw	low (__pbssBANK1+40)
   523     07EF  120A  118A  22BE  120A  118A  	fcall	clear_ram0
   524                           
   525                           ; Clear objects allocated to BANK0
   526     07F4  3020               	movlw	low __pbssBANK0
   527     07F5  0084               	movwf	4
   528     07F6  3044               	movlw	low (__pbssBANK0+36)
   529     07F7  120A  118A  22BE  120A  118A  	fcall	clear_ram0
   530     07FC                     end_of_initialization:	
   531                           ;End of C runtime variable initialization code
   532                           
   533     07FC                     __end_of__initialization:
   534     07FC  0183               	clrf	3
   535     07FD  120A  118A  2E2D   	ljmp	_main	;jump to C main() function
   536                           
   537                           	psect	bssBANK0
   538     0020                     __pbssBANK0:
   539     0020                     __SIM900_waitResponse@F1191:
   540     0020                     	ds	6
   541     0026                     _recv:
   542     0026                     	ds	2
   543     0028                     _MsgLength:
   544     0028                     	ds	2
   545     002A                     _RcvdEnd:
   546     002A                     	ds	2
   547     002C                     _index:
   548     002C                     	ds	2
   549     002E                     _RcvdConf:
   550     002E                     	ds	2
   551     0030                     _RcvdCheck:
   552     0030                     	ds	2
   553     0032                     _x:
   554     0032                     	ds	2
   555     0034                     _IncData:
   556     0034                     	ds	1
   557     0035                     _MsgMob:
   558     0035                     	ds	15
   559                           
   560                           	psect	dataBANK0
   561     0057                     __pdataBANK0:
   562     0057                     __SIM900_waitResponse@F1194:
   563     0057                     	ds	6
   564     005D                     _p:
   565     005D                     	ds	1
   566                           
   567                           	psect	bssBANK1
   568     00A0                     __pbssBANK1:
   569     00A0                     _MsgTxt:
   570     00A0                     	ds	40
   571                           
   572                           	psect	bssBANK3
   573     0190                     __pbssBANK3:
   574     0190                     _RcvdMsg:
   575     0190                     	ds	60
   576                           
   577                           	psect	inittext
   578     02EB                     init_fetch0:	
   579                           ;	Called with low address in FSR and high address in W
   580                           
   581     02EB  087E               	movf	btemp,w
   582     02EC  008A               	movwf	10
   583     02ED  087F               	movf	btemp+1,w
   584     02EE  0082               	movwf	2
   585     02EF                     init_ram0:	
   586                           ;Called with:
   587                           ;	high address of idata address in btemp 
   588                           ;	low address of idata address in btemp+1 
   589                           ;	low address of data in FSR
   590                           ;	high address + 1 of data in btemp-1
   591                           
   592     02EF  120A  118A  22EB  120A  118A  	fcall	init_fetch0
   593     02F4  0080               	movwf	0
   594     02F5  0A84               	incf	4,f
   595     02F6  0804               	movf	4,w
   596     02F7  067D               	xorwf	btemp+-1,w
   597     02F8  1903               	btfsc	3,2
   598     02F9  3400               	retlw	0
   599     02FA  0AFF               	incf	btemp+1,f
   600     02FB  1903               	btfsc	3,2
   601     02FC  0AFE               	incf	btemp,f
   602     02FD  2AEF               	goto	init_ram0
   603                           
   604                           	psect	clrtext
   605     02BE                     clear_ram0:	
   606                           ;	Called with FSR containing the base address, and
   607                           ;	W with the last address+1
   608                           
   609     02BE  0064               	clrwdt	;clear the watchdog before getting into this loop
   610     02BF                     clrloop0:
   611     02BF  0180               	clrf	0	;clear RAM location pointed to by FSR
   612     02C0  0A84               	incf	4,f	;increment pointer
   613     02C1  0604               	xorwf	4,w	;XOR with final address
   614     02C2  1903               	btfsc	3,2	;have we reached the end yet?
   615     02C3  3400               	retlw	0	;all done for this memory range, return
   616     02C4  0604               	xorwf	4,w	;XOR again to restore value
   617     02C5  2ABF               	goto	clrloop0	;do the next byte
   618                           
   619                           	psect	cstackCOMMON
   620     0070                     __pcstackCOMMON:
   621     0070                     ?__SIM900_waitResponse:
   622     0070                     ??__SIM900_waitResponse:	
   623                           ; 1 bytes @ 0x0
   624                           
   625     0070                     ?_Config:	
   626                           ; 1 bytes @ 0x0
   627                           
   628     0070                     ?_RecSMS:	
   629                           ; 1 bytes @ 0x0
   630                           
   631     0070                     ?_ClearBuffers:	
   632                           ; 1 bytes @ 0x0
   633                           
   634     0070                     ?_Lcd_SetBit:	
   635                           ; 1 bytes @ 0x0
   636                           
   637     0070                     ??_Lcd_SetBit:	
   638                           ; 1 bytes @ 0x0
   639                           
   640     0070                     ?_Lcd_Cmd:	
   641                           ; 1 bytes @ 0x0
   642                           
   643     0070                     ?_Lcd_Clear:	
   644                           ; 1 bytes @ 0x0
   645                           
   646     0070                     ?_Lcd_Start:	
   647                           ; 1 bytes @ 0x0
   648                           
   649     0070                     ?_Lcd_Print_Char:	
   650                           ; 1 bytes @ 0x0
   651                           
   652     0070                     ?_Initialize_SIM900:	
   653                           ; 1 bytes @ 0x0
   654                           
   655     0070                     ??_Initialize_SIM900:	
   656                           ; 1 bytes @ 0x0
   657                           
   658     0070                     ?__SIM900_putch:	
   659                           ; 1 bytes @ 0x0
   660                           
   661     0070                     ??__SIM900_putch:	
   662                           ; 1 bytes @ 0x0
   663                           
   664     0070                     ?__SIM900_getch:	
   665                           ; 1 bytes @ 0x0
   666                           
   667     0070                     ??__SIM900_getch:	
   668                           ; 1 bytes @ 0x0
   669                           
   670     0070                     ?__SIM900_print:	
   671                           ; 1 bytes @ 0x0
   672                           
   673     0070                     ?_main:	
   674                           ; 1 bytes @ 0x0
   675                           
   676     0070                     ?_strcpy:	
   677                           ; 1 bytes @ 0x0
   678                           
   679     0070                     Lcd_SetBit@data_bit:	
   680                           ; 2 bytes @ 0x0
   681                           
   682     0070                     __SIM900_putch@bt:	
   683                           ; 1 bytes @ 0x0
   684                           
   685     0070                     strcpy@to:	
   686                           ; 1 bytes @ 0x0
   687                           
   688                           
   689                           ; 2 bytes @ 0x0
   690     0070                     	ds	1
   691     0071                     ??_Lcd_Cmd:
   692     0071                     ??_Lcd_Print_Char:	
   693                           ; 1 bytes @ 0x1
   694                           
   695     0071                     ??__SIM900_print:	
   696                           ; 1 bytes @ 0x1
   697                           
   698                           
   699                           ; 1 bytes @ 0x1
   700     0071                     	ds	1
   701     0072                     Lcd_Print_Char@Lower_Nibble:
   702     0072                     __SIM900_print@ptr:	
   703                           ; 1 bytes @ 0x2
   704                           
   705     0072                     strcpy@from:	
   706                           ; 1 bytes @ 0x2
   707                           
   708                           
   709                           ; 1 bytes @ 0x2
   710     0072                     	ds	1
   711     0073                     ??_Config:
   712     0073                     ??_strcpy:	
   713                           ; 1 bytes @ 0x3
   714                           
   715     0073                     ?_SIM900_isStarted:	
   716                           ; 1 bytes @ 0x3
   717                           
   718     0073                     ?_SIM900_isReady:	
   719                           ; 2 bytes @ 0x3
   720                           
   721     0073                     Lcd_Cmd@a:	
   722                           ; 2 bytes @ 0x3
   723                           
   724     0073                     Lcd_Print_Char@Upper_Nibble:	
   725                           ; 1 bytes @ 0x3
   726                           
   727                           
   728                           ; 1 bytes @ 0x3
   729     0073                     	ds	1
   730     0074                     ??_Lcd_Clear:
   731     0074                     ?_Lcd_Set_Cursor:	
   732                           ; 1 bytes @ 0x4
   733                           
   734     0074                     ??_Lcd_Start:	
   735                           ; 1 bytes @ 0x4
   736                           
   737     0074                     Lcd_Set_Cursor@b:	
   738                           ; 1 bytes @ 0x4
   739                           
   740     0074                     Lcd_Print_Char@data:	
   741                           ; 1 bytes @ 0x4
   742                           
   743     0074                     strcpy@cp:	
   744                           ; 1 bytes @ 0x4
   745                           
   746                           
   747                           ; 2 bytes @ 0x4
   748     0074                     	ds	1
   749     0075                     ??_Lcd_Set_Cursor:
   750     0075                     ??_SIM900_isStarted:	
   751                           ; 1 bytes @ 0x5
   752                           
   753     0075                     ??_SIM900_isReady:	
   754                           ; 1 bytes @ 0x5
   755                           
   756     0075                     Lcd_Print_Char@i:	
   757                           ; 1 bytes @ 0x5
   758                           
   759                           
   760                           ; 2 bytes @ 0x5
   761     0075                     	ds	1
   762     0076                     Lcd_Set_Cursor@a:
   763                           
   764                           ; 1 bytes @ 0x6
   765     0076                     	ds	1
   766     0077                     Lcd_Set_Cursor@z:
   767     0077                     Lcd_Print_Char@i_109:	
   768                           ; 1 bytes @ 0x7
   769                           
   770                           
   771                           ; 2 bytes @ 0x7
   772     0077                     	ds	1
   773     0078                     Lcd_Set_Cursor@y:
   774                           
   775                           ; 1 bytes @ 0x8
   776     0078                     	ds	1
   777     0079                     ?_Lcd_Print_String:
   778     0079                     Lcd_Set_Cursor@temp:	
   779                           ; 1 bytes @ 0x9
   780                           
   781     0079                     Lcd_Print_String@a:	
   782                           ; 1 bytes @ 0x9
   783                           
   784                           
   785                           ; 2 bytes @ 0x9
   786     0079                     	ds	2
   787     007B                     ??_Lcd_Print_String:
   788                           
   789                           ; 1 bytes @ 0xB
   790     007B                     	ds	3
   791     007E                     ??_ClearBuffers:
   792                           
   793                           	psect	cstackBANK0
   794     0044                     __pcstackBANK0:	
   795                           ; 1 bytes @ 0xE
   796                           
   797     0044                     Lcd_Print_String@i:
   798     0044                     __SIM900_waitResponse@strings:	
   799                           ; 2 bytes @ 0x0
   800                           
   801                           
   802                           ; 6 bytes @ 0x0
   803     0044                     	ds	2
   804     0046                     ??_RecSMS:
   805                           
   806                           ; 1 bytes @ 0x2
   807     0046                     	ds	4
   808     004A                     __SIM900_waitResponse@so_far:
   809                           
   810                           ; 6 bytes @ 0x6
   811     004A                     	ds	6
   812     0050                     __SIM900_waitResponse@received:
   813                           
   814                           ; 1 bytes @ 0xC
   815     0050                     	ds	1
   816     0051                     __SIM900_waitResponse@response:
   817                           
   818                           ; 1 bytes @ 0xD
   819     0051                     	ds	1
   820     0052                     __SIM900_waitResponse@continue_loop:
   821                           
   822                           ; 1 bytes @ 0xE
   823     0052                     	ds	1
   824     0053                     __SIM900_waitResponse@i:
   825                           
   826                           ; 1 bytes @ 0xF
   827     0053                     	ds	1
   828     0054                     ??_main:
   829                           
   830                           ; 1 bytes @ 0x10
   831     0054                     	ds	3
   832                           
   833                           	psect	maintext
   834     062D                     __pmaintext:	
   835 ;;
   836 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   837 ;;
   838 ;; *************** function _main *****************
   839 ;; Defined at:
   840 ;;		line 341 in file "WNB.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   849 ;; Tracked objects:
   850 ;;		On entry : B00/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   854 ;;      Params:         0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0
   856 ;;      Temps:          0       3       0       0       0
   857 ;;      Totals:         0       3       0       0       0
   858 ;;Total ram usage:        3 bytes
   859 ;; Hardware stack levels required when called: 5
   860 ;; This function calls:
   861 ;;		_Config
   862 ;;		_Initialize_SIM900
   863 ;;		_Lcd_Clear
   864 ;;		_Lcd_Print_String
   865 ;;		_Lcd_Set_Cursor
   866 ;;		_Lcd_Start
   867 ;;		_RecSMS
   868 ;;		_SIM900_isReady
   869 ;;		_SIM900_isStarted
   870 ;; This function is called by:
   871 ;;		Startup code after reset
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     062D                     _main:	
   876                           ;psect for function _main
   877                           
   878     062D                     l1639:	
   879                           ;incstack = 0
   880                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   881                           
   882                           
   883                           ;WNB.c: 345:     TRISD = 0x00;
   884     062D  1683               	bsf	3,5	;RP0=1, select bank1
   885     062E  1303               	bcf	3,6	;RP1=0, select bank1
   886     062F  0188               	clrf	8	;volatile
   887     0630                     l1641:
   888                           
   889                           ;WNB.c: 348:     Lcd_Start();
   890     0630  120A  118A  2453  120A  118A  	fcall	_Lcd_Start
   891     0635                     l1643:
   892                           
   893                           ;WNB.c: 349:     Initialize_SIM900();
   894     0635  120A  118A  22FE  120A  118A  	fcall	_Initialize_SIM900
   895     063A                     l1645:
   896                           
   897                           ;WNB.c: 351:     Lcd_Set_Cursor(1, 1);
   898     063A  01F4               	clrf	Lcd_Set_Cursor@b
   899     063B  0AF4               	incf	Lcd_Set_Cursor@b,f
   900     063C  3001               	movlw	1
   901     063D  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
   902     0642                     l1647:
   903                           
   904                           ;WNB.c: 352:     Lcd_Print_String("SIM900 & PIC    ");
   905     0642  3033               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
   906     0643  00F9               	movwf	Lcd_Print_String@a
   907     0644  3080               	movlw	128
   908     0645  00FA               	movwf	Lcd_Print_String@a+1
   909     0646  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
   910     064B                     l1649:
   911                           
   912                           ;WNB.c: 357:     {;WNB.c: 358:         Lcd_Set_Cursor(2, 1);
   913     064B  01F4               	clrf	Lcd_Set_Cursor@b
   914     064C  0AF4               	incf	Lcd_Set_Cursor@b,f
   915     064D  3002               	movlw	2
   916     064E  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
   917     0653                     l1651:
   918                           
   919                           ;WNB.c: 359:         Lcd_Print_String("Module not found");
   920     0653  3077               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
   921     0654  00F9               	movwf	Lcd_Print_String@a
   922     0655  3080               	movlw	128
   923     0656  00FA               	movwf	Lcd_Print_String@a+1
   924     0657  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
   925     065C                     l1653:
   926                           
   927                           ;WNB.c: 360:     } while (!SIM900_isStarted());
   928     065C  120A  118A  232F  120A  118A  	fcall	_SIM900_isStarted
   929     0661  0873               	movf	?_SIM900_isStarted,w
   930     0662  0474               	iorwf	?_SIM900_isStarted+1,w
   931     0663  1903               	btfsc	3,2
   932     0664  2E66               	goto	u1101
   933     0665  2E67               	goto	u1100
   934     0666                     u1101:
   935     0666  2E4B               	goto	l1649
   936     0667                     u1100:
   937     0667                     l1655:
   938                           
   939                           ;WNB.c: 361:     Lcd_Set_Cursor(2, 1);
   940     0667  01F4               	clrf	Lcd_Set_Cursor@b
   941     0668  0AF4               	incf	Lcd_Set_Cursor@b,f
   942     0669  3002               	movlw	2
   943     066A  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
   944     066F                     l1657:
   945                           
   946                           ;WNB.c: 362:     Lcd_Print_String("Module Detected ");
   947     066F  3066               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
   948     0670  00F9               	movwf	Lcd_Print_String@a
   949     0671  3080               	movlw	128
   950     0672  00FA               	movwf	Lcd_Print_String@a+1
   951     0673  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
   952     0678                     l1659:
   953                           
   954                           ;WNB.c: 363:     _delay((unsigned long)((1500)*(20000000/4000.0)));
   955     0678  3027               	movlw	39
   956     0679  1283               	bcf	3,5	;RP0=0, select bank0
   957     067A  1303               	bcf	3,6	;RP1=0, select bank0
   958     067B  00D6               	movwf	??_main+2
   959     067C  300D               	movlw	13
   960     067D  00D5               	movwf	??_main+1
   961     067E  3025               	movlw	37
   962     067F  00D4               	movwf	??_main
   963     0680                     u1127:
   964     0680  0BD4               	decfsz	??_main,f
   965     0681  2E80               	goto	u1127
   966     0682  0BD5               	decfsz	??_main+1,f
   967     0683  2E80               	goto	u1127
   968     0684  0BD6               	decfsz	??_main+2,f
   969     0685  2E80               	goto	u1127
   970     0686  2E87               	nop2
   971     0687                     l1661:
   972                           
   973                           ;WNB.c: 369:     {;WNB.c: 370:         Lcd_Set_Cursor(2, 1);
   974     0687  01F4               	clrf	Lcd_Set_Cursor@b
   975     0688  0AF4               	incf	Lcd_Set_Cursor@b,f
   976     0689  3002               	movlw	2
   977     068A  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
   978     068F                     l1663:
   979                           
   980                           ;WNB.c: 371:         Lcd_Print_String("SIM not found   ");
   981     068F  3055               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
   982     0690  00F9               	movwf	Lcd_Print_String@a
   983     0691  3080               	movlw	128
   984     0692  00FA               	movwf	Lcd_Print_String@a+1
   985     0693  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
   986     0698                     l1665:
   987                           
   988                           ;WNB.c: 372:     } while (!SIM900_isReady());
   989     0698  120A  118A  2316  120A  118A  	fcall	_SIM900_isReady
   990     069D  0873               	movf	?_SIM900_isReady,w
   991     069E  0474               	iorwf	?_SIM900_isReady+1,w
   992     069F  1903               	btfsc	3,2
   993     06A0  2EA2               	goto	u1111
   994     06A1  2EA3               	goto	u1110
   995     06A2                     u1111:
   996     06A2  2E87               	goto	l1661
   997     06A3                     u1110:
   998     06A3                     l1667:
   999                           
  1000                           ;WNB.c: 373:     Lcd_Set_Cursor(2, 1);
  1001     06A3  01F4               	clrf	Lcd_Set_Cursor@b
  1002     06A4  0AF4               	incf	Lcd_Set_Cursor@b,f
  1003     06A5  3002               	movlw	2
  1004     06A6  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
  1005     06AB                     l1669:
  1006                           
  1007                           ;WNB.c: 374:     Lcd_Print_String("SIM Detected    ");
  1008     06AB  3044               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1009     06AC  00F9               	movwf	Lcd_Print_String@a
  1010     06AD  3080               	movlw	128
  1011     06AE  00FA               	movwf	Lcd_Print_String@a+1
  1012     06AF  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
  1013     06B4                     l1671:
  1014                           
  1015                           ;WNB.c: 375:     _delay((unsigned long)((1500)*(20000000/4000.0)));
  1016     06B4  3027               	movlw	39
  1017     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1018     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1019     06B7  00D6               	movwf	??_main+2
  1020     06B8  300D               	movlw	13
  1021     06B9  00D5               	movwf	??_main+1
  1022     06BA  3025               	movlw	37
  1023     06BB  00D4               	movwf	??_main
  1024     06BC                     u1137:
  1025     06BC  0BD4               	decfsz	??_main,f
  1026     06BD  2EBC               	goto	u1137
  1027     06BE  0BD5               	decfsz	??_main+1,f
  1028     06BF  2EBC               	goto	u1137
  1029     06C0  0BD6               	decfsz	??_main+2,f
  1030     06C1  2EBC               	goto	u1137
  1031     06C2  2EC3               	nop2
  1032     06C3                     l1673:
  1033                           
  1034                           ;WNB.c: 377:     Lcd_Clear();
  1035     06C3  120A  118A  22D0  120A  118A  	fcall	_Lcd_Clear
  1036     06C8                     l1675:
  1037                           
  1038                           ;WNB.c: 393:     Config();
  1039     06C8  120A  118A  24FF  120A  118A  	fcall	_Config
  1040     06CD                     l1677:
  1041                           
  1042                           ;WNB.c: 394:      Lcd_Set_Cursor(1, 1);
  1043     06CD  01F4               	clrf	Lcd_Set_Cursor@b
  1044     06CE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1045     06CF  3001               	movlw	1
  1046     06D0  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
  1047     06D5                     l1679:
  1048                           
  1049                           ;WNB.c: 395:     Lcd_Print_String("Waiting for msg..");
  1050     06D5  3021               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1051     06D6  00F9               	movwf	Lcd_Print_String@a
  1052     06D7  3080               	movlw	128
  1053     06D8  00FA               	movwf	Lcd_Print_String@a+1
  1054     06D9  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
  1055     06DE                     l1681:
  1056                           
  1057                           ;WNB.c: 397:     {;WNB.c: 398:         RecSMS();
  1058     06DE  120A  118A  26E7  120A  118A  	fcall	_RecSMS
  1059     06E3  2EDE               	goto	l1681
  1060     06E4  120A  118A  2800   	ljmp	start
  1061     06E7                     __end_of_main:
  1062                           
  1063                           	psect	text1
  1064     032F                     __ptext1:	
  1065 ;; *************** function _SIM900_isStarted *****************
  1066 ;; Defined at:
  1067 ;;		line 290 in file "WNB.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2    3[COMMON] int 
  1074 ;; Registers used:
  1075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1081 ;;      Params:         2       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0
  1083 ;;      Temps:          2       0       0       0       0
  1084 ;;      Totals:         4       0       0       0       0
  1085 ;;Total ram usage:        4 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; Hardware stack levels required when called: 2
  1088 ;; This function calls:
  1089 ;;		__SIM900_print
  1090 ;;		__SIM900_waitResponse
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096     032F                     _SIM900_isStarted:	
  1097                           ;psect for function _SIM900_isStarted
  1098                           
  1099     032F                     l1383:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _SIM900_isStarted: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1102                           
  1103                           
  1104                           ;WNB.c: 292:     _SIM900_print("AT\r\n");
  1105     032F  30CB               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1106     0330  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  1107     0335                     l1385:
  1108                           
  1109                           ;WNB.c: 293:     return (_SIM900_waitResponse() == 1);
  1110     0335  120A  118A  25B4  120A  118A  	fcall	__SIM900_waitResponse
  1111     033A  3A01               	xorlw	1
  1112     033B  1903               	skipnz
  1113     033C  2B3E               	goto	u711
  1114     033D  2B40               	goto	u710
  1115     033E                     u711:
  1116     033E  3001               	movlw	1
  1117     033F  2B41               	goto	u720
  1118     0340                     u710:
  1119     0340  3000               	movlw	0
  1120     0341                     u720:
  1121     0341  00F5               	movwf	??_SIM900_isStarted
  1122     0342  01F6               	clrf	??_SIM900_isStarted+1
  1123     0343  0875               	movf	??_SIM900_isStarted,w
  1124     0344  00F3               	movwf	?_SIM900_isStarted
  1125     0345  0876               	movf	??_SIM900_isStarted+1,w
  1126     0346  00F4               	movwf	?_SIM900_isStarted+1
  1127     0347                     l154:
  1128     0347  0008               	return
  1129     0348                     __end_of_SIM900_isStarted:
  1130                           
  1131                           	psect	text2
  1132     0316                     __ptext2:	
  1133 ;; *************** function _SIM900_isReady *****************
  1134 ;; Defined at:
  1135 ;;		line 296 in file "WNB.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;		None
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;		None
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  2    3[COMMON] int 
  1142 ;; Registers used:
  1143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1149 ;;      Params:         2       0       0       0       0
  1150 ;;      Locals:         0       0       0       0       0
  1151 ;;      Temps:          2       0       0       0       0
  1152 ;;      Totals:         4       0       0       0       0
  1153 ;;Total ram usage:        4 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 2
  1156 ;; This function calls:
  1157 ;;		__SIM900_print
  1158 ;;		__SIM900_waitResponse
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164     0316                     _SIM900_isReady:	
  1165                           ;psect for function _SIM900_isReady
  1166                           
  1167     0316                     l1389:	
  1168                           ;incstack = 0
  1169                           ; Regs used in _SIM900_isReady: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1170                           
  1171                           
  1172                           ;WNB.c: 298:     _SIM900_print("AT+CPIN?\r\n");
  1173     0316  30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1174     0317  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  1175     031C                     l1391:
  1176                           
  1177                           ;WNB.c: 299:     return (_SIM900_waitResponse() == 2);
  1178     031C  120A  118A  25B4  120A  118A  	fcall	__SIM900_waitResponse
  1179     0321  3A02               	xorlw	2
  1180     0322  1903               	skipnz
  1181     0323  2B25               	goto	u731
  1182     0324  2B27               	goto	u730
  1183     0325                     u731:
  1184     0325  3001               	movlw	1
  1185     0326  2B28               	goto	u740
  1186     0327                     u730:
  1187     0327  3000               	movlw	0
  1188     0328                     u740:
  1189     0328  00F5               	movwf	??_SIM900_isReady
  1190     0329  01F6               	clrf	??_SIM900_isReady+1
  1191     032A  0875               	movf	??_SIM900_isReady,w
  1192     032B  00F3               	movwf	?_SIM900_isReady
  1193     032C  0876               	movf	??_SIM900_isReady+1,w
  1194     032D  00F4               	movwf	?_SIM900_isReady+1
  1195     032E                     l157:
  1196     032E  0008               	return
  1197     032F                     __end_of_SIM900_isReady:
  1198                           
  1199                           	psect	text3
  1200     05B4                     __ptext3:	
  1201 ;; *************** function __SIM900_waitResponse *****************
  1202 ;; Defined at:
  1203 ;;		line 302 in file "WNB.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  i               1   15[BANK0 ] unsigned char 
  1208 ;;  so_far          6    6[BANK0 ] unsigned char [6]
  1209 ;;  strings         6    0[BANK0 ] PTR const unsigned char 
  1210 ;;		 -> STR_8(7), STR_7(11), STR_6(5), STR_5(6), 
  1211 ;;		 -> STR_4(13), STR_3(3), 
  1212 ;;  continue_loo    1   14[BANK0 ] unsigned char 
  1213 ;;  response        1   13[BANK0 ] unsigned char 
  1214 ;;  received        1   12[BANK0 ] unsigned char 
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      unsigned char 
  1217 ;; Registers used:
  1218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0      16       0       0       0
  1226 ;;      Temps:          1       0       0       0       0
  1227 ;;      Totals:         1      16       0       0       0
  1228 ;;Total ram usage:       17 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 1
  1231 ;; This function calls:
  1232 ;;		__SIM900_getch
  1233 ;; This function is called by:
  1234 ;;		_SIM900_isStarted
  1235 ;;		_SIM900_isReady
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239     05B4                     __SIM900_waitResponse:	
  1240                           ;psect for function __SIM900_waitResponse
  1241                           
  1242     05B4                     l1291:	
  1243                           ;incstack = 0
  1244                           ; Regs used in __SIM900_waitResponse: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1245                           
  1246                           
  1247                           ;WNB.c: 304:     unsigned char so_far[6] = {0, 0, 0, 0, 0, 0};
  1248     05B4  304A               	movlw	__SIM900_waitResponse@so_far& (0+255)
  1249     05B5  0084               	movwf	4
  1250     05B6  3006               	movlw	6
  1251     05B7  00FF               	movwf	btemp+1
  1252     05B8                     u660:
  1253     05B8  1383               	bcf	3,7	;select IRP bank0
  1254     05B9  0180               	clrf	0
  1255     05BA  0A84               	incf	4,f
  1256     05BB  0BFF               	decfsz	btemp+1,f
  1257     05BC  2DB8               	goto	u660
  1258     05BD                     l1293:
  1259                           
  1260                           ;WNB.c: 305:     unsigned const char lengths[6] = {2, 12, 5, 4, 6, 6};;WNB.c: 306:     u
      +                          nsigned const char* strings[6] = {"OK", "+CPIN: READY", "ERROR", "RING", "NO CARRIER", "
      +                          Unlink"};
  1261     05BD  3044               	movlw	__SIM900_waitResponse@strings& (0+255)
  1262     05BE  0084               	movwf	4
  1263     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  1264     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  1265     05C1  0857               	movf	__SIM900_waitResponse@F1194,w
  1266     05C2  0080               	movwf	0
  1267     05C3  0A84               	incf	4,f
  1268     05C4  0858               	movf	__SIM900_waitResponse@F1194+1,w
  1269     05C5  0080               	movwf	0
  1270     05C6  0A84               	incf	4,f
  1271     05C7  0859               	movf	__SIM900_waitResponse@F1194+2,w
  1272     05C8  0080               	movwf	0
  1273     05C9  0A84               	incf	4,f
  1274     05CA  085A               	movf	__SIM900_waitResponse@F1194+3,w
  1275     05CB  0080               	movwf	0
  1276     05CC  0A84               	incf	4,f
  1277     05CD  085B               	movf	__SIM900_waitResponse@F1194+4,w
  1278     05CE  0080               	movwf	0
  1279     05CF  0A84               	incf	4,f
  1280     05D0  085C               	movf	__SIM900_waitResponse@F1194+5,w
  1281     05D1  0080               	movwf	0
  1282     05D2                     l1295:
  1283                           
  1284                           ;WNB.c: 307:     unsigned const char responses[6] = {1, 2, 3, 4, 5, 6};;WNB.c: 308:     
      +                          unsigned char received;;WNB.c: 309:     unsigned char response;;WNB.c: 310:     char con
      +                          tinue_loop = 1;
  1285     05D2  01D2               	clrf	__SIM900_waitResponse@continue_loop
  1286     05D3  0AD2               	incf	__SIM900_waitResponse@continue_loop,f
  1287                           
  1288                           ;WNB.c: 312:     while (continue_loop)
  1289     05D4  2E26               	goto	l1321
  1290     05D5                     l1297:
  1291                           
  1292                           ;WNB.c: 313:     {;WNB.c: 314:         received = _SIM900_getch();
  1293     05D5  120A  118A  22DD  120A  118A  	fcall	__SIM900_getch
  1294     05DA  1283               	bcf	3,5	;RP0=0, select bank0
  1295     05DB  1303               	bcf	3,6	;RP1=0, select bank0
  1296     05DC  00D0               	movwf	__SIM900_waitResponse@received
  1297     05DD                     l1299:
  1298                           
  1299                           ;WNB.c: 316:         for (unsigned char i = 0; i < 6; i++)
  1300     05DD  01D3               	clrf	__SIM900_waitResponse@i
  1301     05DE                     l1305:
  1302                           
  1303                           ;WNB.c: 317:         {;WNB.c: 318:             if (strings[i][so_far[i]] == received)
  1304     05DE  0853               	movf	__SIM900_waitResponse@i,w
  1305     05DF  3E4A               	addlw	(low (__SIM900_waitResponse@so_far| 0))& (0+255)
  1306     05E0  0084               	movwf	4
  1307     05E1  1383               	bcf	3,7	;select IRP bank0
  1308     05E2  0800               	movf	0,w
  1309     05E3  00F0               	movwf	??__SIM900_waitResponse
  1310     05E4  0853               	movf	__SIM900_waitResponse@i,w
  1311     05E5  3E44               	addlw	(low (__SIM900_waitResponse@strings| 0))& (0+255)
  1312     05E6  0084               	movwf	4
  1313     05E7  0800               	movf	0,w
  1314     05E8  0770               	addwf	??__SIM900_waitResponse,w
  1315     05E9  0084               	movwf	4
  1316     05EA  120A  118A  200D  120A  118A  	fcall	stringdir
  1317     05EF  0650               	xorwf	__SIM900_waitResponse@received,w
  1318     05F0  1D03               	skipz
  1319     05F1  2DF3               	goto	u671
  1320     05F2  2DF4               	goto	u670
  1321     05F3                     u671:
  1322     05F3  2E18               	goto	l1315
  1323     05F4                     u670:
  1324     05F4                     l1307:
  1325                           
  1326                           ;WNB.c: 319:             {;WNB.c: 320:                 so_far[i]++;
  1327     05F4  3001               	movlw	1
  1328     05F5  00F0               	movwf	??__SIM900_waitResponse
  1329     05F6  0853               	movf	__SIM900_waitResponse@i,w
  1330     05F7  3E4A               	addlw	(low (__SIM900_waitResponse@so_far| 0))& (0+255)
  1331     05F8  0084               	movwf	4
  1332     05F9  0870               	movf	??__SIM900_waitResponse,w
  1333     05FA  0780               	addwf	0,f
  1334     05FB                     l1309:
  1335                           
  1336                           ;WNB.c: 321:                 if (so_far[i] == lengths[i])
  1337     05FB  0853               	movf	__SIM900_waitResponse@i,w
  1338     05FC  3E07               	addlw	low ((__SIM900_waitResponse@lengths-__stringbase)| (0+32768))
  1339     05FD  0084               	movwf	4
  1340     05FE  120A  118A  200D  120A  118A  	fcall	stringdir
  1341     0603  00F0               	movwf	??__SIM900_waitResponse
  1342     0604  0853               	movf	__SIM900_waitResponse@i,w
  1343     0605  3E4A               	addlw	(low (__SIM900_waitResponse@so_far| 0))& (0+255)
  1344     0606  0084               	movwf	4
  1345     0607  0800               	movf	0,w
  1346     0608  0670               	xorwf	??__SIM900_waitResponse,w
  1347     0609  1D03               	skipz
  1348     060A  2E0C               	goto	u681
  1349     060B  2E0D               	goto	u680
  1350     060C                     u681:
  1351     060C  2E1C               	goto	l1317
  1352     060D                     u680:
  1353     060D                     l1311:
  1354                           
  1355                           ;WNB.c: 322:                 {;WNB.c: 323:                     response = responses[i];
  1356     060D  0853               	movf	__SIM900_waitResponse@i,w
  1357     060E  3E01               	addlw	low ((__SIM900_waitResponse@responses-__stringbase)| (0+32768))
  1358     060F  0084               	movwf	4
  1359     0610  120A  118A  200D  120A  118A  	fcall	stringdir
  1360     0615  00D1               	movwf	__SIM900_waitResponse@response
  1361     0616                     l1313:
  1362                           
  1363                           ;WNB.c: 324:                     continue_loop = 0;
  1364     0616  01D2               	clrf	__SIM900_waitResponse@continue_loop
  1365     0617  2E1C               	goto	l1317
  1366     0618                     l1315:
  1367                           
  1368                           ;WNB.c: 328:             {;WNB.c: 329:                 so_far[i] = 0;
  1369     0618  0853               	movf	__SIM900_waitResponse@i,w
  1370     0619  3E4A               	addlw	(low (__SIM900_waitResponse@so_far| 0))& (0+255)
  1371     061A  0084               	movwf	4
  1372     061B  0180               	clrf	0
  1373     061C                     l1317:
  1374                           
  1375                           ;WNB.c: 331:         }
  1376     061C  3001               	movlw	1
  1377     061D  00F0               	movwf	??__SIM900_waitResponse
  1378     061E  0870               	movf	??__SIM900_waitResponse,w
  1379     061F  07D3               	addwf	__SIM900_waitResponse@i,f
  1380     0620                     l1319:
  1381     0620  3006               	movlw	6
  1382     0621  0253               	subwf	__SIM900_waitResponse@i,w
  1383     0622  1C03               	skipc
  1384     0623  2E25               	goto	u691
  1385     0624  2E26               	goto	u690
  1386     0625                     u691:
  1387     0625  2DDE               	goto	l1305
  1388     0626                     u690:
  1389     0626                     l1321:
  1390                           
  1391                           ;WNB.c: 312:     while (continue_loop)
  1392     0626  0852               	movf	__SIM900_waitResponse@continue_loop,w
  1393     0627  1D03               	btfss	3,2
  1394     0628  2E2A               	goto	u701
  1395     0629  2E2B               	goto	u700
  1396     062A                     u701:
  1397     062A  2DD5               	goto	l1297
  1398     062B                     u700:
  1399     062B                     l1323:
  1400                           
  1401                           ;WNB.c: 333:     return response;
  1402     062B  0851               	movf	__SIM900_waitResponse@response,w
  1403     062C                     l176:
  1404     062C  0008               	return
  1405     062D                     __end_of__SIM900_waitResponse:
  1406                           
  1407                           	psect	text4
  1408     06E7                     __ptext4:	
  1409 ;; *************** function _RecSMS *****************
  1410 ;; Defined at:
  1411 ;;		line 415 in file "WNB.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      void 
  1418 ;; Registers used:
  1419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         0       0       0       0       0
  1426 ;;      Locals:         0       0       0       0       0
  1427 ;;      Temps:          0       1       0       0       0
  1428 ;;      Totals:         0       1       0       0       0
  1429 ;;Total ram usage:        1 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 4
  1432 ;; This function calls:
  1433 ;;		_ClearBuffers
  1434 ;;		__SIM900_getch
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440     06E7                     _RecSMS:	
  1441                           ;psect for function _RecSMS
  1442                           
  1443     06E7                     l1561:	
  1444                           ;incstack = 0
  1445                           ; Regs used in _RecSMS: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1446                           
  1447                           
  1448                           ;WNB.c: 417:     if (RCIF == 1)
  1449     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  1450     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  1451     06E9  1E8C               	btfss	12,5	;volatile
  1452     06EA  2EEC               	goto	u941
  1453     06EB  2EED               	goto	u940
  1454     06EC                     u941:
  1455     06EC  2FD3               	goto	l210
  1456     06ED                     u940:
  1457     06ED                     l1563:
  1458                           
  1459                           ;WNB.c: 418:     {;WNB.c: 419:         IncData = _SIM900_getch();
  1460     06ED  120A  118A  22DD  120A  118A  	fcall	__SIM900_getch
  1461     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  1462     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  1463     06F4  00B4               	movwf	_IncData
  1464     06F5                     l1565:
  1465                           
  1466                           ;WNB.c: 421:         if (IncData == '+')
  1467     06F5  302B               	movlw	43
  1468     06F6  0634               	xorwf	_IncData,w
  1469     06F7  1D03               	btfss	3,2
  1470     06F8  2EFA               	goto	u951
  1471     06F9  2EFB               	goto	u950
  1472     06FA                     u951:
  1473     06FA  2EFF               	goto	l1569
  1474     06FB                     u950:
  1475     06FB                     l1567:
  1476                           
  1477                           ;WNB.c: 422:         {;WNB.c: 423:             RcvdCheck = 1;
  1478     06FB  3001               	movlw	1
  1479     06FC  00B0               	movwf	_RcvdCheck
  1480     06FD  3000               	movlw	0
  1481     06FE  00B1               	movwf	_RcvdCheck+1
  1482     06FF                     l1569:
  1483                           
  1484                           ;WNB.c: 425:         if ((IncData == 'C') && (RcvdCheck == 1))
  1485     06FF  3043               	movlw	67
  1486     0700  0634               	xorwf	_IncData,w
  1487     0701  1D03               	btfss	3,2
  1488     0702  2F04               	goto	u961
  1489     0703  2F05               	goto	u960
  1490     0704                     u961:
  1491     0704  2F0F               	goto	l1575
  1492     0705                     u960:
  1493     0705                     l1571:
  1494     0705  0330               	decf	_RcvdCheck,w
  1495     0706  0431               	iorwf	_RcvdCheck+1,w
  1496     0707  1D03               	btfss	3,2
  1497     0708  2F0A               	goto	u971
  1498     0709  2F0B               	goto	u970
  1499     070A                     u971:
  1500     070A  2F0F               	goto	l1575
  1501     070B                     u970:
  1502     070B                     l1573:
  1503                           
  1504                           ;WNB.c: 426:         {;WNB.c: 427:             RcvdCheck = 2;
  1505     070B  3002               	movlw	2
  1506     070C  00B0               	movwf	_RcvdCheck
  1507     070D  3000               	movlw	0
  1508     070E  00B1               	movwf	_RcvdCheck+1
  1509     070F                     l1575:
  1510                           
  1511                           ;WNB.c: 429:         if ((IncData == 'M') && (RcvdCheck == 2))
  1512     070F  304D               	movlw	77
  1513     0710  0634               	xorwf	_IncData,w
  1514     0711  1D03               	btfss	3,2
  1515     0712  2F14               	goto	u981
  1516     0713  2F15               	goto	u980
  1517     0714                     u981:
  1518     0714  2F20               	goto	l1581
  1519     0715                     u980:
  1520     0715                     l1577:
  1521     0715  3002               	movlw	2
  1522     0716  0630               	xorwf	_RcvdCheck,w
  1523     0717  0431               	iorwf	_RcvdCheck+1,w
  1524     0718  1D03               	btfss	3,2
  1525     0719  2F1B               	goto	u991
  1526     071A  2F1C               	goto	u990
  1527     071B                     u991:
  1528     071B  2F20               	goto	l1581
  1529     071C                     u990:
  1530     071C                     l1579:
  1531                           
  1532                           ;WNB.c: 430:         {;WNB.c: 431:             RcvdCheck = 3;
  1533     071C  3003               	movlw	3
  1534     071D  00B0               	movwf	_RcvdCheck
  1535     071E  3000               	movlw	0
  1536     071F  00B1               	movwf	_RcvdCheck+1
  1537     0720                     l1581:
  1538                           
  1539                           ;WNB.c: 433:         if ((IncData == 'T') && (RcvdCheck == 3))
  1540     0720  3054               	movlw	84
  1541     0721  0634               	xorwf	_IncData,w
  1542     0722  1D03               	btfss	3,2
  1543     0723  2F25               	goto	u1001
  1544     0724  2F26               	goto	u1000
  1545     0725                     u1001:
  1546     0725  2F31               	goto	l1587
  1547     0726                     u1000:
  1548     0726                     l1583:
  1549     0726  3003               	movlw	3
  1550     0727  0630               	xorwf	_RcvdCheck,w
  1551     0728  0431               	iorwf	_RcvdCheck+1,w
  1552     0729  1D03               	btfss	3,2
  1553     072A  2F2C               	goto	u1011
  1554     072B  2F2D               	goto	u1010
  1555     072C                     u1011:
  1556     072C  2F31               	goto	l1587
  1557     072D                     u1010:
  1558     072D                     l1585:
  1559                           
  1560                           ;WNB.c: 434:         {;WNB.c: 435:             RcvdCheck = 4;
  1561     072D  3004               	movlw	4
  1562     072E  00B0               	movwf	_RcvdCheck
  1563     072F  3000               	movlw	0
  1564     0730  00B1               	movwf	_RcvdCheck+1
  1565     0731                     l1587:
  1566                           
  1567                           ;WNB.c: 437:         if (RcvdCheck == 4)
  1568     0731  3004               	movlw	4
  1569     0732  0630               	xorwf	_RcvdCheck,w
  1570     0733  0431               	iorwf	_RcvdCheck+1,w
  1571     0734  1D03               	btfss	3,2
  1572     0735  2F37               	goto	u1021
  1573     0736  2F38               	goto	u1020
  1574     0737                     u1021:
  1575     0737  2F40               	goto	l1595
  1576     0738                     u1020:
  1577     0738                     l1589:
  1578                           
  1579                           ;WNB.c: 438:         {;WNB.c: 439:             index = 0;
  1580     0738  01AC               	clrf	_index
  1581     0739  01AD               	clrf	_index+1
  1582     073A                     l1591:
  1583                           
  1584                           ;WNB.c: 440:             RcvdConf = 1;
  1585     073A  3001               	movlw	1
  1586     073B  00AE               	movwf	_RcvdConf
  1587     073C  3000               	movlw	0
  1588     073D  00AF               	movwf	_RcvdConf+1
  1589     073E                     l1593:
  1590                           
  1591                           ;WNB.c: 441:             RcvdCheck = 0;
  1592     073E  01B0               	clrf	_RcvdCheck
  1593     073F  01B1               	clrf	_RcvdCheck+1
  1594     0740                     l1595:
  1595                           
  1596                           ;WNB.c: 444:         if (RcvdConf == 1)
  1597     0740  032E               	decf	_RcvdConf,w
  1598     0741  042F               	iorwf	_RcvdConf+1,w
  1599     0742  1D03               	btfss	3,2
  1600     0743  2F45               	goto	u1031
  1601     0744  2F46               	goto	u1030
  1602     0745                     u1031:
  1603     0745  2FD3               	goto	l210
  1604     0746                     u1030:
  1605     0746                     l1597:
  1606                           
  1607                           ;WNB.c: 445:         {;WNB.c: 446:             if (IncData == '\n')
  1608     0746  300A               	movlw	10
  1609     0747  0634               	xorwf	_IncData,w
  1610     0748  1D03               	btfss	3,2
  1611     0749  2F4B               	goto	u1041
  1612     074A  2F4C               	goto	u1040
  1613     074B                     u1041:
  1614     074B  2F52               	goto	l1601
  1615     074C                     u1040:
  1616     074C                     l1599:
  1617                           
  1618                           ;WNB.c: 447:             {;WNB.c: 448:                 RcvdEnd++;
  1619     074C  3001               	movlw	1
  1620     074D  07AA               	addwf	_RcvdEnd,f
  1621     074E  1803               	skipnc
  1622     074F  0AAB               	incf	_RcvdEnd+1,f
  1623     0750  3000               	movlw	0
  1624     0751  07AB               	addwf	_RcvdEnd+1,f
  1625     0752                     l1601:
  1626                           
  1627                           ;WNB.c: 450:             if (RcvdEnd == 3)
  1628     0752  3003               	movlw	3
  1629     0753  062A               	xorwf	_RcvdEnd,w
  1630     0754  042B               	iorwf	_RcvdEnd+1,w
  1631     0755  1D03               	btfss	3,2
  1632     0756  2F58               	goto	u1051
  1633     0757  2F59               	goto	u1050
  1634     0758                     u1051:
  1635     0758  2F5B               	goto	l1605
  1636     0759                     u1050:
  1637     0759                     l1603:
  1638                           
  1639                           ;WNB.c: 451:             {;WNB.c: 452:                 RcvdEnd = 0;
  1640     0759  01AA               	clrf	_RcvdEnd
  1641     075A  01AB               	clrf	_RcvdEnd+1
  1642     075B                     l1605:
  1643                           
  1644                           ;WNB.c: 455:             RcvdMsg[index] = IncData;
  1645     075B  082C               	movf	_index,w
  1646     075C  3E90               	addlw	(low (_RcvdMsg| (0+256)))& (0+255)
  1647     075D  0084               	movwf	4
  1648     075E  0834               	movf	_IncData,w
  1649     075F  1783               	bsf	3,7	;select IRP bank3
  1650     0760  0080               	movwf	0
  1651     0761                     l1607:
  1652                           
  1653                           ;WNB.c: 456:             index++;
  1654     0761  3001               	movlw	1
  1655     0762  07AC               	addwf	_index,f
  1656     0763  1803               	skipnc
  1657     0764  0AAD               	incf	_index+1,f
  1658     0765  3000               	movlw	0
  1659     0766  07AD               	addwf	_index+1,f
  1660     0767                     l1609:
  1661                           
  1662                           ;WNB.c: 458:             if (RcvdEnd == 2)
  1663     0767  3002               	movlw	2
  1664     0768  062A               	xorwf	_RcvdEnd,w
  1665     0769  042B               	iorwf	_RcvdEnd+1,w
  1666     076A  1D03               	btfss	3,2
  1667     076B  2F6D               	goto	u1061
  1668     076C  2F6E               	goto	u1060
  1669     076D                     u1061:
  1670     076D  2F7A               	goto	l203
  1671     076E                     u1060:
  1672     076E                     l1611:
  1673                           
  1674                           ;WNB.c: 459:             {;WNB.c: 460:                 RcvdConf = 0;
  1675     076E  01AE               	clrf	_RcvdConf
  1676     076F  01AF               	clrf	_RcvdConf+1
  1677     0770                     l1613:
  1678                           
  1679                           ;WNB.c: 461:                 MsgLength = index - 2;
  1680     0770  082C               	movf	_index,w
  1681     0771  3EFE               	addlw	254
  1682     0772  00A8               	movwf	_MsgLength
  1683     0773  082D               	movf	_index+1,w
  1684     0774  1803               	skipnc
  1685     0775  3E01               	addlw	1
  1686     0776  3EFF               	addlw	255
  1687     0777  00A9               	movwf	_MsgLength+1
  1688     0778                     l1615:
  1689                           
  1690                           ;WNB.c: 462:                 index = 0;
  1691     0778  01AC               	clrf	_index
  1692     0779  01AD               	clrf	_index+1
  1693     077A                     l203:	
  1694                           ;WNB.c: 463:             }
  1695                           
  1696                           
  1697                           ;WNB.c: 465:             if (RcvdConf == 0)
  1698     077A  082E               	movf	_RcvdConf,w
  1699     077B  042F               	iorwf	_RcvdConf+1,w
  1700     077C  1D03               	btfss	3,2
  1701     077D  2F7F               	goto	u1071
  1702     077E  2F80               	goto	u1070
  1703     077F                     u1071:
  1704     077F  2FD3               	goto	l210
  1705     0780                     u1070:
  1706     0780                     l1617:
  1707                           
  1708                           ;WNB.c: 466:             {;WNB.c: 469:                 for (x = 4; x < 17; x++)
  1709     0780  3004               	movlw	4
  1710     0781  00B2               	movwf	_x
  1711     0782  3000               	movlw	0
  1712     0783  00B3               	movwf	_x+1
  1713     0784                     l1623:
  1714                           
  1715                           ;WNB.c: 470:                 {;WNB.c: 471:                     MsgMob[x - 4] = RcvdMsg[x
      +                          ];
  1716     0784  1283               	bcf	3,5	;RP0=0, select bank0
  1717     0785  1303               	bcf	3,6	;RP1=0, select bank0
  1718     0786  0832               	movf	_x,w
  1719     0787  3E90               	addlw	(low (_RcvdMsg| (0+256)))& (0+255)
  1720     0788  0084               	movwf	4
  1721     0789  1783               	bsf	3,7	;select IRP bank3
  1722     078A  0800               	movf	0,w
  1723     078B  00C6               	movwf	??_RecSMS
  1724     078C  0832               	movf	_x,w
  1725     078D  3E31               	addlw	(low ((_MsgMob| 0+252)))& (0+255)
  1726     078E  0084               	movwf	4
  1727     078F  0846               	movf	??_RecSMS,w
  1728     0790  1383               	bcf	3,7	;select IRP bank0
  1729     0791  0080               	movwf	0
  1730     0792                     l1625:
  1731                           
  1732                           ;WNB.c: 473:                 }
  1733     0792  3001               	movlw	1
  1734     0793  07B2               	addwf	_x,f
  1735     0794  1803               	skipnc
  1736     0795  0AB3               	incf	_x+1,f
  1737     0796  3000               	movlw	0
  1738     0797  07B3               	addwf	_x+1,f
  1739     0798                     l1627:
  1740     0798  0833               	movf	_x+1,w
  1741     0799  3A80               	xorlw	128
  1742     079A  00FF               	movwf	btemp+1
  1743     079B  3080               	movlw	128
  1744     079C  027F               	subwf	btemp+1,w
  1745     079D  1D03               	skipz
  1746     079E  2FA1               	goto	u1085
  1747     079F  3011               	movlw	17
  1748     07A0  0232               	subwf	_x,w
  1749     07A1                     u1085:
  1750     07A1  1C03               	skipc
  1751     07A2  2FA4               	goto	u1081
  1752     07A3  2FA5               	goto	u1080
  1753     07A4                     u1081:
  1754     07A4  2F84               	goto	l1623
  1755     07A5                     u1080:
  1756     07A5                     l1629:
  1757                           
  1758                           ;WNB.c: 476:                 for (x = 46; x < MsgLength; x++)
  1759     07A5  302E               	movlw	46
  1760     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1761     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1762     07A8  00B2               	movwf	_x
  1763     07A9  3000               	movlw	0
  1764     07AA  00B3               	movwf	_x+1
  1765     07AB  2FC0               	goto	l1635
  1766     07AC                     l1631:
  1767                           
  1768                           ;WNB.c: 477:                 {;WNB.c: 478:                     MsgTxt[x - 46] = RcvdMsg[
      +                          x];
  1769     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1770     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1771     07AE  0832               	movf	_x,w
  1772     07AF  3E90               	addlw	(low (_RcvdMsg| (0+256)))& (0+255)
  1773     07B0  0084               	movwf	4
  1774     07B1  1783               	bsf	3,7	;select IRP bank3
  1775     07B2  0800               	movf	0,w
  1776     07B3  00C6               	movwf	??_RecSMS
  1777     07B4  0832               	movf	_x,w
  1778     07B5  3E72               	addlw	(low ((_MsgTxt| 0+210)))& (0+255)
  1779     07B6  0084               	movwf	4
  1780     07B7  0846               	movf	??_RecSMS,w
  1781     07B8  1383               	bcf	3,7	;select IRP bank1
  1782     07B9  0080               	movwf	0
  1783     07BA                     l1633:
  1784                           
  1785                           ;WNB.c: 479:                 }
  1786     07BA  3001               	movlw	1
  1787     07BB  07B2               	addwf	_x,f
  1788     07BC  1803               	skipnc
  1789     07BD  0AB3               	incf	_x+1,f
  1790     07BE  3000               	movlw	0
  1791     07BF  07B3               	addwf	_x+1,f
  1792     07C0                     l1635:
  1793     07C0  0833               	movf	_x+1,w
  1794     07C1  3A80               	xorlw	128
  1795     07C2  00C6               	movwf	??_RecSMS
  1796     07C3  0829               	movf	_MsgLength+1,w
  1797     07C4  3A80               	xorlw	128
  1798     07C5  0246               	subwf	??_RecSMS,w
  1799     07C6  1D03               	skipz
  1800     07C7  2FCA               	goto	u1095
  1801     07C8  0828               	movf	_MsgLength,w
  1802     07C9  0232               	subwf	_x,w
  1803     07CA                     u1095:
  1804     07CA  1C03               	skipc
  1805     07CB  2FCD               	goto	u1091
  1806     07CC  2FCE               	goto	u1090
  1807     07CD                     u1091:
  1808     07CD  2FAC               	goto	l1631
  1809     07CE                     u1090:
  1810     07CE                     l1637:
  1811                           
  1812                           ;WNB.c: 480:                 ClearBuffers();
  1813     07CE  120A  118A  24A8  120A  118A  	fcall	_ClearBuffers
  1814     07D3                     l210:
  1815     07D3  0008               	return
  1816     07D4                     __end_of_RecSMS:
  1817                           
  1818                           	psect	text5
  1819     02DD                     __ptext5:	
  1820 ;; *************** function __SIM900_getch *****************
  1821 ;; Defined at:
  1822 ;;		line 252 in file "WNB.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      unsigned char 
  1829 ;; Registers used:
  1830 ;;		wreg
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1836 ;;      Params:         0       0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0
  1839 ;;      Totals:         0       0       0       0       0
  1840 ;;Total ram usage:        0 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		__SIM900_waitResponse
  1846 ;;		_RecSMS
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850     02DD                     __SIM900_getch:	
  1851                           ;psect for function __SIM900_getch
  1852                           
  1853     02DD                     l1267:	
  1854                           ;incstack = 0
  1855                           ; Regs used in __SIM900_getch: [wreg]
  1856                           
  1857                           
  1858                           ;WNB.c: 255:     if (OERR)
  1859     02DD  1283               	bcf	3,5	;RP0=0, select bank0
  1860     02DE  1303               	bcf	3,6	;RP1=0, select bank0
  1861     02DF  1C98               	btfss	24,1	;volatile
  1862     02E0  2AE2               	goto	u621
  1863     02E1  2AE3               	goto	u620
  1864     02E2                     u621:
  1865     02E2  2AE5               	goto	l136
  1866     02E3                     u620:
  1867     02E3                     l1269:
  1868                           
  1869                           ;WNB.c: 256:     {;WNB.c: 257:         CREN = 0;
  1870     02E3  1218               	bcf	24,4	;volatile
  1871                           
  1872                           ;WNB.c: 258:         CREN = 1;
  1873     02E4  1618               	bsf	24,4	;volatile
  1874     02E5                     l136:
  1875     02E5  1E8C               	btfss	12,5	;volatile
  1876     02E6  2AE8               	goto	u631
  1877     02E7  2AE9               	goto	u630
  1878     02E8                     u631:
  1879     02E8  2AE5               	goto	l136
  1880     02E9                     u630:
  1881     02E9                     l1271:
  1882                           
  1883                           ;WNB.c: 261:     return RCREG;
  1884     02E9  081A               	movf	26,w	;volatile
  1885     02EA                     l139:
  1886     02EA  0008               	return
  1887     02EB                     __end_of__SIM900_getch:
  1888                           
  1889                           	psect	text6
  1890     04A8                     __ptext6:	
  1891 ;; *************** function _ClearBuffers *****************
  1892 ;; Defined at:
  1893 ;;		line 486 in file "WNB.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 3
  1914 ;; This function calls:
  1915 ;;		_Lcd_Clear
  1916 ;;		_Lcd_Print_String
  1917 ;;		_Lcd_Set_Cursor
  1918 ;;		_strcpy
  1919 ;; This function is called by:
  1920 ;;		_RecSMS
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924     04A8                     _ClearBuffers:	
  1925                           ;psect for function _ClearBuffers
  1926                           
  1927     04A8                     l1539:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _ClearBuffers: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1930                           
  1931                           
  1932                           ;WNB.c: 488:     Lcd_Clear();
  1933     04A8  120A  118A  22D0  120A  118A  	fcall	_Lcd_Clear
  1934                           
  1935                           ;WNB.c: 489:     Lcd_Set_Cursor(1, 1);
  1936     04AD  01F4               	clrf	Lcd_Set_Cursor@b
  1937     04AE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1938     04AF  3001               	movlw	1
  1939     04B0  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
  1940     04B5                     l1541:
  1941                           
  1942                           ;WNB.c: 490:     Lcd_Print_String(MsgMob);
  1943     04B5  3035               	movlw	(low (_MsgMob| 0))& (0+255)
  1944     04B6  00F9               	movwf	Lcd_Print_String@a
  1945     04B7  3000               	movlw	0
  1946     04B8  00FA               	movwf	Lcd_Print_String@a+1
  1947     04B9  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
  1948     04BE                     l1543:
  1949                           
  1950                           ;WNB.c: 491:     Lcd_Set_Cursor(2, 1);
  1951     04BE  01F4               	clrf	Lcd_Set_Cursor@b
  1952     04BF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1953     04C0  3002               	movlw	2
  1954     04C1  120A  118A  240D  120A  118A  	fcall	_Lcd_Set_Cursor
  1955                           
  1956                           ;WNB.c: 492:     Lcd_Print_String(MsgTxt);
  1957     04C6  30A0               	movlw	(low (_MsgTxt| 0))& (0+255)
  1958     04C7  00F9               	movwf	Lcd_Print_String@a
  1959     04C8  3000               	movlw	0
  1960     04C9  00FA               	movwf	Lcd_Print_String@a+1
  1961     04CA  120A  118A  23C7  120A  118A  	fcall	_Lcd_Print_String
  1962     04CF                     l1545:
  1963                           
  1964                           ;WNB.c: 493:     strcpy(RcvdMsg, "");
  1965     04CF  3090               	movlw	(low (_RcvdMsg| (0+256)))& (0+255)
  1966     04D0  00F0               	movwf	strcpy@to
  1967     04D1  3001               	movlw	1
  1968     04D2  00F1               	movwf	strcpy@to+1
  1969     04D3  3020               	movlw	(low (((STR_18+19)-__stringbase)| (0+32768)))& (0+255)
  1970     04D4  00F2               	movwf	strcpy@from
  1971     04D5  120A  118A  23A3  120A  118A  	fcall	_strcpy
  1972     04DA                     l1547:
  1973                           
  1974                           ;WNB.c: 494:     RcvdCheck = 0;
  1975     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  1976     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  1977     04DC  01B0               	clrf	_RcvdCheck
  1978     04DD  01B1               	clrf	_RcvdCheck+1
  1979     04DE                     l1549:
  1980                           
  1981                           ;WNB.c: 495:     RcvdConf = 0;
  1982     04DE  01AE               	clrf	_RcvdConf
  1983     04DF  01AF               	clrf	_RcvdConf+1
  1984     04E0                     l1551:
  1985                           
  1986                           ;WNB.c: 496:     index = 0;
  1987     04E0  01AC               	clrf	_index
  1988     04E1  01AD               	clrf	_index+1
  1989     04E2                     l1553:
  1990                           
  1991                           ;WNB.c: 497:     RcvdEnd = 0;
  1992     04E2  01AA               	clrf	_RcvdEnd
  1993     04E3  01AB               	clrf	_RcvdEnd+1
  1994     04E4                     l1555:
  1995                           
  1996                           ;WNB.c: 498:     strcpy(MsgMob, "");
  1997     04E4  3035               	movlw	(low (_MsgMob| 0))& (0+255)
  1998     04E5  00F0               	movwf	strcpy@to
  1999     04E6  3000               	movlw	0
  2000     04E7  00F1               	movwf	strcpy@to+1
  2001     04E8  3020               	movlw	(low (((STR_18+19)-__stringbase)| (0+32768)))& (0+255)
  2002     04E9  00F2               	movwf	strcpy@from
  2003     04EA  120A  118A  23A3  120A  118A  	fcall	_strcpy
  2004     04EF                     l1557:
  2005                           
  2006                           ;WNB.c: 499:     strcpy(MsgTxt, "");
  2007     04EF  30A0               	movlw	(low (_MsgTxt| 0))& (0+255)
  2008     04F0  00F0               	movwf	strcpy@to
  2009     04F1  3000               	movlw	0
  2010     04F2  00F1               	movwf	strcpy@to+1
  2011     04F3  3020               	movlw	(low (((STR_18+19)-__stringbase)| (0+32768)))& (0+255)
  2012     04F4  00F2               	movwf	strcpy@from
  2013     04F5  120A  118A  23A3  120A  118A  	fcall	_strcpy
  2014     04FA                     l1559:
  2015                           
  2016                           ;WNB.c: 500:     MsgLength = 0;
  2017     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2018     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2019     04FC  01A8               	clrf	_MsgLength
  2020     04FD  01A9               	clrf	_MsgLength+1
  2021     04FE                     l213:
  2022     04FE  0008               	return
  2023     04FF                     __end_of_ClearBuffers:
  2024                           
  2025                           	psect	text7
  2026     03A3                     __ptext7:	
  2027 ;; *************** function _strcpy *****************
  2028 ;; Defined at:
  2029 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strcpy.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  to              2    0[COMMON] PTR unsigned char 
  2032 ;;		 -> MsgTxt(40), MsgMob(15), RcvdMsg(60), 
  2033 ;;  from            1    2[COMMON] PTR const unsigned char 
  2034 ;;		 -> STR_21(1), STR_20(1), STR_19(1), 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  cp              2    4[COMMON] PTR unsigned char 
  2037 ;;		 -> MsgTxt(40), MsgMob(15), RcvdMsg(60), 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  2    0[COMMON] PTR unsigned char 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         3       0       0       0       0
  2048 ;;      Locals:         2       0       0       0       0
  2049 ;;      Temps:          1       0       0       0       0
  2050 ;;      Totals:         6       0       0       0       0
  2051 ;;Total ram usage:        6 bytes
  2052 ;; Hardware stack levels used: 2
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_ClearBuffers
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060     03A3                     _strcpy:	
  2061                           ;psect for function _strcpy
  2062                           
  2063     03A3                     l1531:	
  2064                           ;incstack = 0
  2065                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2066                           
  2067     03A3  0870               	movf	strcpy@to,w
  2068     03A4  00F4               	movwf	strcpy@cp
  2069     03A5  0871               	movf	strcpy@to+1,w
  2070     03A6  00F5               	movwf	strcpy@cp+1
  2071     03A7  2BB2               	goto	l1537
  2072     03A8                     l1533:
  2073     03A8  3001               	movlw	1
  2074     03A9  07F4               	addwf	strcpy@cp,f
  2075     03AA  1803               	skipnc
  2076     03AB  0AF5               	incf	strcpy@cp+1,f
  2077     03AC  3000               	movlw	0
  2078     03AD  07F5               	addwf	strcpy@cp+1,f
  2079     03AE                     l1535:
  2080     03AE  3001               	movlw	1
  2081     03AF  00F3               	movwf	??_strcpy
  2082     03B0  0873               	movf	??_strcpy,w
  2083     03B1  07F2               	addwf	strcpy@from,f
  2084     03B2                     l1537:
  2085     03B2  0872               	movf	strcpy@from,w
  2086     03B3  0084               	movwf	4
  2087     03B4  120A  118A  200D  120A  118A  	fcall	stringdir
  2088     03B9  00F3               	movwf	??_strcpy
  2089     03BA  0874               	movf	strcpy@cp,w
  2090     03BB  0084               	movwf	4
  2091     03BC  1783               	bsf	3,7
  2092     03BD  1C75               	btfss	strcpy@cp+1,0
  2093     03BE  1383               	bcf	3,7
  2094     03BF  0873               	movf	??_strcpy,w
  2095     03C0  0080               	movwf	0
  2096     03C1  0800               	movf	0,w
  2097     03C2  1D03               	btfss	3,2
  2098     03C3  2BC5               	goto	u931
  2099     03C4  2BC6               	goto	u930
  2100     03C5                     u931:
  2101     03C5  2BA8               	goto	l1533
  2102     03C6                     u930:
  2103     03C6                     l753:
  2104     03C6  0008               	return
  2105     03C7                     __end_of_strcpy:
  2106                           
  2107                           	psect	text8
  2108     040D                     __ptext8:	
  2109 ;; *************** function _Lcd_Set_Cursor *****************
  2110 ;; Defined at:
  2111 ;;		line 118 in file "WNB.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  a               1    wreg     unsigned char 
  2114 ;;  b               1    4[COMMON] unsigned char 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  a               1    6[COMMON] unsigned char 
  2117 ;;  temp            1    9[COMMON] unsigned char 
  2118 ;;  y               1    8[COMMON] unsigned char 
  2119 ;;  z               1    7[COMMON] unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         1       0       0       0       0
  2130 ;;      Locals:         4       0       0       0       0
  2131 ;;      Temps:          1       0       0       0       0
  2132 ;;      Totals:         6       0       0       0       0
  2133 ;;Total ram usage:        6 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 2
  2136 ;; This function calls:
  2137 ;;		_Lcd_Cmd
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;;		_ClearBuffers
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     040D                     _Lcd_Set_Cursor:	
  2145                           ;psect for function _Lcd_Set_Cursor
  2146                           
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2150                           ;Lcd_Set_Cursor@a stored from wreg
  2151     040D  00F6               	movwf	Lcd_Set_Cursor@a
  2152     040E                     l1239:
  2153                           
  2154                           ;WNB.c: 118: void Lcd_Set_Cursor(char a, char b);WNB.c: 119:  {;WNB.c: 120:     char tem
      +                          p, z, y;;WNB.c: 121:     if (a == 1)
  2155     040E  0376               	decf	Lcd_Set_Cursor@a,w
  2156     040F  1D03               	btfss	3,2
  2157     0410  2C12               	goto	u551
  2158     0411  2C13               	goto	u550
  2159     0412                     u551:
  2160     0412  2C30               	goto	l1249
  2161     0413                     u550:
  2162     0413                     l1241:
  2163                           
  2164                           ;WNB.c: 122:  {;WNB.c: 123:         temp = 0x80 + b - 1;
  2165     0413  0874               	movf	Lcd_Set_Cursor@b,w
  2166     0414  3E7F               	addlw	127
  2167     0415  00F9               	movwf	Lcd_Set_Cursor@temp
  2168                           
  2169                           ;WNB.c: 124:         z = temp >> 4;
  2170     0416  0879               	movf	Lcd_Set_Cursor@temp,w
  2171     0417  00F5               	movwf	??_Lcd_Set_Cursor
  2172     0418  3004               	movlw	4
  2173     0419                     u565:
  2174     0419  1003               	clrc
  2175     041A  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2176     041B  3EFF               	addlw	-1
  2177     041C  1D03               	skipz
  2178     041D  2C19               	goto	u565
  2179     041E  0875               	movf	??_Lcd_Set_Cursor,w
  2180     041F  00F7               	movwf	Lcd_Set_Cursor@z
  2181     0420                     l1243:
  2182                           
  2183                           ;WNB.c: 125:         y = temp & 0x0F;
  2184     0420  0879               	movf	Lcd_Set_Cursor@temp,w
  2185     0421  390F               	andlw	15
  2186     0422  00F8               	movwf	Lcd_Set_Cursor@y
  2187     0423                     l1245:
  2188                           
  2189                           ;WNB.c: 126:         Lcd_Cmd(z);
  2190     0423  0877               	movf	Lcd_Set_Cursor@z,w
  2191     0424  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2192     0429                     l1247:
  2193                           
  2194                           ;WNB.c: 127:         Lcd_Cmd(y);
  2195     0429  0878               	movf	Lcd_Set_Cursor@y,w
  2196     042A  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2197                           
  2198                           ;WNB.c: 128:     }
  2199     042F  2C52               	goto	l105
  2200     0430                     l1249:
  2201     0430  3002               	movlw	2
  2202     0431  0676               	xorwf	Lcd_Set_Cursor@a,w
  2203     0432  1D03               	btfss	3,2
  2204     0433  2C35               	goto	u571
  2205     0434  2C36               	goto	u570
  2206     0435                     u571:
  2207     0435  2C52               	goto	l105
  2208     0436                     u570:
  2209     0436                     l1251:
  2210                           
  2211                           ;WNB.c: 130:  {;WNB.c: 131:         temp = 0xC0 + b - 1;
  2212     0436  0874               	movf	Lcd_Set_Cursor@b,w
  2213     0437  3EBF               	addlw	191
  2214     0438  00F9               	movwf	Lcd_Set_Cursor@temp
  2215                           
  2216                           ;WNB.c: 132:         z = temp >> 4;
  2217     0439  0879               	movf	Lcd_Set_Cursor@temp,w
  2218     043A  00F5               	movwf	??_Lcd_Set_Cursor
  2219     043B  3004               	movlw	4
  2220     043C                     u585:
  2221     043C  1003               	clrc
  2222     043D  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2223     043E  3EFF               	addlw	-1
  2224     043F  1D03               	skipz
  2225     0440  2C3C               	goto	u585
  2226     0441  0875               	movf	??_Lcd_Set_Cursor,w
  2227     0442  00F7               	movwf	Lcd_Set_Cursor@z
  2228     0443                     l1253:
  2229                           
  2230                           ;WNB.c: 133:         y = temp & 0x0F;
  2231     0443  0879               	movf	Lcd_Set_Cursor@temp,w
  2232     0444  390F               	andlw	15
  2233     0445  00F8               	movwf	Lcd_Set_Cursor@y
  2234     0446                     l1255:
  2235                           
  2236                           ;WNB.c: 134:         Lcd_Cmd(z);
  2237     0446  0877               	movf	Lcd_Set_Cursor@z,w
  2238     0447  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2239     044C                     l1257:
  2240                           
  2241                           ;WNB.c: 135:         Lcd_Cmd(y);
  2242     044C  0878               	movf	Lcd_Set_Cursor@y,w
  2243     044D  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2244     0452                     l105:
  2245     0452  0008               	return
  2246     0453                     __end_of_Lcd_Set_Cursor:
  2247                           
  2248                           	psect	text9
  2249     03C7                     __ptext9:	
  2250 ;; *************** function _Lcd_Print_String *****************
  2251 ;; Defined at:
  2252 ;;		line 173 in file "WNB.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;  a               2    9[COMMON] PTR unsigned char 
  2255 ;;		 -> MsgTxt(40), MsgMob(15), STR_14(18), STR_13(17), 
  2256 ;;		 -> STR_12(17), STR_11(17), STR_10(17), STR_9(17), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  i               2    0[BANK0 ] int 
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         2       0       0       0       0
  2269 ;;      Locals:         0       2       0       0       0
  2270 ;;      Temps:          3       0       0       0       0
  2271 ;;      Totals:         5       2       0       0       0
  2272 ;;Total ram usage:        7 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 2
  2275 ;; This function calls:
  2276 ;;		_Lcd_Print_Char
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;;		_ClearBuffers
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283     03C7                     _Lcd_Print_String:	
  2284                           ;psect for function _Lcd_Print_String
  2285                           
  2286     03C7                     l1259:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2289                           
  2290                           
  2291                           ;WNB.c: 173: void Lcd_Print_String(char *a);WNB.c: 174:  {;WNB.c: 175:     int i;;WNB.c:
      +                           176:     for (i = 0; a[i] != '\0'; i++)
  2292     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2293     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2294     03C9  01C4               	clrf	Lcd_Print_String@i
  2295     03CA  01C5               	clrf	Lcd_Print_String@i+1
  2296     03CB  2BF0               	goto	l1265
  2297     03CC                     l1261:
  2298                           
  2299                           ;WNB.c: 177:         Lcd_Print_Char(a[i]);
  2300     03CC  0844               	movf	Lcd_Print_String@i,w
  2301     03CD  0779               	addwf	Lcd_Print_String@a,w
  2302     03CE  00FC               	movwf	??_Lcd_Print_String+1
  2303     03CF  087A               	movf	Lcd_Print_String@a+1,w
  2304     03D0  00FB               	movwf	??_Lcd_Print_String
  2305     03D1  1803               	skipnc
  2306     03D2  0AFB               	incf	??_Lcd_Print_String,f
  2307     03D3  1FC4               	btfss	Lcd_Print_String@i,7
  2308     03D4  2BD6               	goto	u590
  2309     03D5  03FB               	decf	??_Lcd_Print_String,f
  2310     03D6                     u590:
  2311     03D6  087B               	movf	??_Lcd_Print_String,w
  2312     03D7  00FD               	movwf	??_Lcd_Print_String+2
  2313     03D8  087D               	movf	??_Lcd_Print_String+2,w
  2314     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2315     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2316     03DB  00FF               	movwf	btemp+1
  2317     03DC  087C               	movf	??_Lcd_Print_String+1,w
  2318     03DD  0084               	movwf	4
  2319     03DE  120A  118A  2003  120A  118A  	fcall	stringtab
  2320     03E3  120A  118A  2559  120A  118A  	fcall	_Lcd_Print_Char
  2321     03E8                     l1263:
  2322     03E8  3001               	movlw	1
  2323     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2324     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2325     03EB  07C4               	addwf	Lcd_Print_String@i,f
  2326     03EC  1803               	skipnc
  2327     03ED  0AC5               	incf	Lcd_Print_String@i+1,f
  2328     03EE  3000               	movlw	0
  2329     03EF  07C5               	addwf	Lcd_Print_String@i+1,f
  2330     03F0                     l1265:
  2331     03F0  0844               	movf	Lcd_Print_String@i,w
  2332     03F1  0779               	addwf	Lcd_Print_String@a,w
  2333     03F2  00FC               	movwf	??_Lcd_Print_String+1
  2334     03F3  087A               	movf	Lcd_Print_String@a+1,w
  2335     03F4  00FB               	movwf	??_Lcd_Print_String
  2336     03F5  1803               	skipnc
  2337     03F6  0AFB               	incf	??_Lcd_Print_String,f
  2338     03F7  1FC4               	btfss	Lcd_Print_String@i,7
  2339     03F8  2BFA               	goto	u600
  2340     03F9  03FB               	decf	??_Lcd_Print_String,f
  2341     03FA                     u600:
  2342     03FA  087B               	movf	??_Lcd_Print_String,w
  2343     03FB  00FD               	movwf	??_Lcd_Print_String+2
  2344     03FC  087D               	movf	??_Lcd_Print_String+2,w
  2345     03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2346     03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2347     03FF  00FF               	movwf	btemp+1
  2348     0400  087C               	movf	??_Lcd_Print_String+1,w
  2349     0401  0084               	movwf	4
  2350     0402  120A  118A  2003  120A  118A  	fcall	stringtab
  2351     0407  3A00               	xorlw	0
  2352     0408  1D03               	skipz
  2353     0409  2C0B               	goto	u611
  2354     040A  2C0C               	goto	u610
  2355     040B                     u611:
  2356     040B  2BCC               	goto	l1261
  2357     040C                     u610:
  2358     040C                     l123:
  2359     040C  0008               	return
  2360     040D                     __end_of_Lcd_Print_String:
  2361                           
  2362                           	psect	text10
  2363     0559                     __ptext10:	
  2364 ;; *************** function _Lcd_Print_Char *****************
  2365 ;; Defined at:
  2366 ;;		line 157 in file "WNB.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  data            1    wreg     unsigned char 
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  data            1    4[COMMON] unsigned char 
  2371 ;;  i               2    7[COMMON] int 
  2372 ;;  i               2    5[COMMON] int 
  2373 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  2374 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         7       0       0       0       0
  2386 ;;      Temps:          1       0       0       0       0
  2387 ;;      Totals:         8       0       0       0       0
  2388 ;;Total ram usage:        8 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 1
  2391 ;; This function calls:
  2392 ;;		_Lcd_SetBit
  2393 ;; This function is called by:
  2394 ;;		_Lcd_Print_String
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398     0559                     _Lcd_Print_Char:	
  2399                           ;psect for function _Lcd_Print_Char
  2400                           
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2404                           ;Lcd_Print_Char@data stored from wreg
  2405     0559  00F4               	movwf	Lcd_Print_Char@data
  2406     055A                     l1205:
  2407                           
  2408                           ;WNB.c: 157: void Lcd_Print_Char(char data);WNB.c: 158:  {;WNB.c: 159:     char Lower_Ni
      +                          bble, Upper_Nibble;;WNB.c: 160:     Lower_Nibble = data & 0x0F;
  2409     055A  0874               	movf	Lcd_Print_Char@data,w
  2410     055B  390F               	andlw	15
  2411     055C  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  2412                           
  2413                           ;WNB.c: 161:     Upper_Nibble = data & 0xF0;
  2414     055D  0874               	movf	Lcd_Print_Char@data,w
  2415     055E  39F0               	andlw	240
  2416     055F  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  2417     0560                     l1207:
  2418                           
  2419                           ;WNB.c: 162:     RD2 = 1;
  2420     0560  1283               	bcf	3,5	;RP0=0, select bank0
  2421     0561  1303               	bcf	3,6	;RP1=0, select bank0
  2422     0562  1508               	bsf	8,2	;volatile
  2423     0563                     l1209:
  2424                           
  2425                           ;WNB.c: 163:     Lcd_SetBit(Upper_Nibble >> 4);
  2426     0563  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  2427     0564  00F1               	movwf	??_Lcd_Print_Char
  2428     0565  3004               	movlw	4
  2429     0566                     u525:
  2430     0566  1003               	clrc
  2431     0567  0CF1               	rrf	??_Lcd_Print_Char,f
  2432     0568  3EFF               	addlw	-1
  2433     0569  1D03               	skipz
  2434     056A  2D66               	goto	u525
  2435     056B  0871               	movf	??_Lcd_Print_Char,w
  2436     056C  120A  118A  2381  120A  118A  	fcall	_Lcd_SetBit
  2437     0571                     l1211:
  2438                           
  2439                           ;WNB.c: 164:     RD3 = 1;
  2440     0571  1283               	bcf	3,5	;RP0=0, select bank0
  2441     0572  1303               	bcf	3,6	;RP1=0, select bank0
  2442     0573  1588               	bsf	8,3	;volatile
  2443     0574                     l1213:
  2444                           
  2445                           ;WNB.c: 165:     for (int i = 2130483; i <= 0; i--) __nop();
  2446     0574  3033               	movlw	51
  2447     0575  00F5               	movwf	Lcd_Print_Char@i
  2448     0576  3082               	movlw	130
  2449     0577  00F6               	movwf	Lcd_Print_Char@i+1
  2450     0578                     l113:
  2451     0578  0000               	nop
  2452     0579                     l1219:
  2453     0579  30FF               	movlw	255
  2454     057A  07F5               	addwf	Lcd_Print_Char@i,f
  2455     057B  1803               	skipnc
  2456     057C  0AF6               	incf	Lcd_Print_Char@i+1,f
  2457     057D  30FF               	movlw	255
  2458     057E  07F6               	addwf	Lcd_Print_Char@i+1,f
  2459     057F                     l1221:
  2460     057F  0876               	movf	Lcd_Print_Char@i+1,w
  2461     0580  3A80               	xorlw	128
  2462     0581  00FF               	movwf	btemp+1
  2463     0582  3080               	movlw	128
  2464     0583  027F               	subwf	btemp+1,w
  2465     0584  1D03               	skipz
  2466     0585  2D88               	goto	u535
  2467     0586  3001               	movlw	1
  2468     0587  0275               	subwf	Lcd_Print_Char@i,w
  2469     0588                     u535:
  2470     0588  1C03               	skipc
  2471     0589  2D8B               	goto	u531
  2472     058A  2D8C               	goto	u530
  2473     058B                     u531:
  2474     058B  2D78               	goto	l113
  2475     058C                     u530:
  2476     058C                     l114:
  2477                           
  2478                           ;WNB.c: 166:     RD3 = 0;
  2479     058C  1283               	bcf	3,5	;RP0=0, select bank0
  2480     058D  1303               	bcf	3,6	;RP1=0, select bank0
  2481     058E  1188               	bcf	8,3	;volatile
  2482     058F                     l1223:
  2483                           
  2484                           ;WNB.c: 167:     Lcd_SetBit(Lower_Nibble);
  2485     058F  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  2486     0590  120A  118A  2381  120A  118A  	fcall	_Lcd_SetBit
  2487     0595                     l1225:
  2488                           
  2489                           ;WNB.c: 168:     RD3 = 1;
  2490     0595  1283               	bcf	3,5	;RP0=0, select bank0
  2491     0596  1303               	bcf	3,6	;RP1=0, select bank0
  2492     0597  1588               	bsf	8,3	;volatile
  2493     0598                     l1227:
  2494                           
  2495                           ;WNB.c: 169:     for (int i = 2130483; i <= 0; i--) __nop();
  2496     0598  3033               	movlw	51
  2497     0599  00F7               	movwf	Lcd_Print_Char@i_109
  2498     059A  3082               	movlw	130
  2499     059B  00F8               	movwf	Lcd_Print_Char@i_109+1
  2500     059C                     l115:
  2501     059C  0000               	nop
  2502     059D                     l1233:
  2503     059D  30FF               	movlw	255
  2504     059E  07F7               	addwf	Lcd_Print_Char@i_109,f
  2505     059F  1803               	skipnc
  2506     05A0  0AF8               	incf	Lcd_Print_Char@i_109+1,f
  2507     05A1  30FF               	movlw	255
  2508     05A2  07F8               	addwf	Lcd_Print_Char@i_109+1,f
  2509     05A3                     l1235:
  2510     05A3  0878               	movf	Lcd_Print_Char@i_109+1,w
  2511     05A4  3A80               	xorlw	128
  2512     05A5  00FF               	movwf	btemp+1
  2513     05A6  3080               	movlw	128
  2514     05A7  027F               	subwf	btemp+1,w
  2515     05A8  1D03               	skipz
  2516     05A9  2DAC               	goto	u545
  2517     05AA  3001               	movlw	1
  2518     05AB  0277               	subwf	Lcd_Print_Char@i_109,w
  2519     05AC                     u545:
  2520     05AC  1C03               	skipc
  2521     05AD  2DAF               	goto	u541
  2522     05AE  2DB0               	goto	u540
  2523     05AF                     u541:
  2524     05AF  2D9C               	goto	l115
  2525     05B0                     u540:
  2526     05B0                     l116:
  2527                           
  2528                           ;WNB.c: 170:     RD3 = 0;
  2529     05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2530     05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2531     05B2  1188               	bcf	8,3	;volatile
  2532     05B3                     l117:
  2533     05B3  0008               	return
  2534     05B4                     __end_of_Lcd_Print_Char:
  2535                           
  2536                           	psect	text11
  2537     02D0                     __ptext11:	
  2538 ;; *************** function _Lcd_Clear *****************
  2539 ;; Defined at:
  2540 ;;		line 112 in file "WNB.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2554 ;;      Params:         0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0
  2556 ;;      Temps:          0       0       0       0       0
  2557 ;;      Totals:         0       0       0       0       0
  2558 ;;Total ram usage:        0 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 2
  2561 ;; This function calls:
  2562 ;;		_Lcd_Cmd
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;;		_ClearBuffers
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569     02D0                     _Lcd_Clear:	
  2570                           ;psect for function _Lcd_Clear
  2571                           
  2572     02D0                     l1237:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;WNB.c: 114:     Lcd_Cmd(0);
  2578     02D0  3000               	movlw	0
  2579     02D1  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2580                           
  2581                           ;WNB.c: 115:     Lcd_Cmd(1);
  2582     02D6  3001               	movlw	1
  2583     02D7  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2584     02DC                     l99:
  2585     02DC  0008               	return
  2586     02DD                     __end_of_Lcd_Clear:
  2587                           
  2588                           	psect	text12
  2589     0453                     __ptext12:	
  2590 ;; *************** function _Lcd_Start *****************
  2591 ;; Defined at:
  2592 ;;		line 139 in file "WNB.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  i               2    0        int 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2606 ;;      Params:         0       0       0       0       0
  2607 ;;      Locals:         0       0       0       0       0
  2608 ;;      Temps:          2       0       0       0       0
  2609 ;;      Totals:         2       0       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used: 1
  2612 ;; Hardware stack levels required when called: 2
  2613 ;; This function calls:
  2614 ;;		_Lcd_Cmd
  2615 ;;		_Lcd_SetBit
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621     0453                     _Lcd_Start:	
  2622                           ;psect for function _Lcd_Start
  2623                           
  2624     0453                     l1349:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;WNB.c: 141:     Lcd_SetBit(0x00);
  2630     0453  3000               	movlw	0
  2631     0454  120A  118A  2381  120A  118A  	fcall	_Lcd_SetBit
  2632     0459                     l1351:
  2633     0459                     l1353:
  2634     0459                     l1361:
  2635                           
  2636                           ;WNB.c: 143:     Lcd_Cmd(0x03);
  2637     0459  3003               	movlw	3
  2638     045A  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2639     045F                     l1363:
  2640                           
  2641                           ;WNB.c: 144:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2642     045F  3021               	movlw	33
  2643     0460  00F5               	movwf	??_Lcd_Start+1
  2644     0461  3076               	movlw	118
  2645     0462  00F4               	movwf	??_Lcd_Start
  2646     0463                     u1147:
  2647     0463  0BF4               	decfsz	??_Lcd_Start,f
  2648     0464  2C63               	goto	u1147
  2649     0465  0BF5               	decfsz	??_Lcd_Start+1,f
  2650     0466  2C63               	goto	u1147
  2651     0467  0000               	nop
  2652     0468                     l1365:
  2653                           
  2654                           ;WNB.c: 145:     Lcd_Cmd(0x03);
  2655     0468  3003               	movlw	3
  2656     0469  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2657                           
  2658                           ;WNB.c: 146:     _delay((unsigned long)((11)*(20000000/4000.0)));
  2659     046E  3048               	movlw	72
  2660     046F  00F5               	movwf	??_Lcd_Start+1
  2661     0470  306C               	movlw	108
  2662     0471  00F4               	movwf	??_Lcd_Start
  2663     0472                     u1157:
  2664     0472  0BF4               	decfsz	??_Lcd_Start,f
  2665     0473  2C72               	goto	u1157
  2666     0474  0BF5               	decfsz	??_Lcd_Start+1,f
  2667     0475  2C72               	goto	u1157
  2668     0476  0000               	nop
  2669     0477                     l1367:
  2670                           
  2671                           ;WNB.c: 147:     Lcd_Cmd(0x03);
  2672     0477  3003               	movlw	3
  2673     0478  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2674     047D                     l1369:
  2675                           
  2676                           ;WNB.c: 148:     Lcd_Cmd(0x02);
  2677     047D  3002               	movlw	2
  2678     047E  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2679     0483                     l1371:
  2680                           
  2681                           ;WNB.c: 149:     Lcd_Cmd(0x02);
  2682     0483  3002               	movlw	2
  2683     0484  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2684     0489                     l1373:
  2685                           
  2686                           ;WNB.c: 150:     Lcd_Cmd(0x08);
  2687     0489  3008               	movlw	8
  2688     048A  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2689     048F                     l1375:
  2690                           
  2691                           ;WNB.c: 151:     Lcd_Cmd(0x00);
  2692     048F  3000               	movlw	0
  2693     0490  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2694     0495                     l1377:
  2695                           
  2696                           ;WNB.c: 152:     Lcd_Cmd(0x0C);
  2697     0495  300C               	movlw	12
  2698     0496  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2699     049B                     l1379:
  2700                           
  2701                           ;WNB.c: 153:     Lcd_Cmd(0x00);
  2702     049B  3000               	movlw	0
  2703     049C  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2704     04A1                     l1381:
  2705                           
  2706                           ;WNB.c: 154:     Lcd_Cmd(0x06);
  2707     04A1  3006               	movlw	6
  2708     04A2  120A  118A  2348  120A  118A  	fcall	_Lcd_Cmd
  2709     04A7                     l110:
  2710     04A7  0008               	return
  2711     04A8                     __end_of_Lcd_Start:
  2712                           
  2713                           	psect	text13
  2714     0348                     __ptext13:	
  2715 ;; *************** function _Lcd_Cmd *****************
  2716 ;; Defined at:
  2717 ;;		line 103 in file "WNB.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  a               1    wreg     unsigned char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  a               1    3[COMMON] unsigned char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, pclath, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2731 ;;      Params:         0       0       0       0       0
  2732 ;;      Locals:         1       0       0       0       0
  2733 ;;      Temps:          2       0       0       0       0
  2734 ;;      Totals:         3       0       0       0       0
  2735 ;;Total ram usage:        3 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 1
  2738 ;; This function calls:
  2739 ;;		_Lcd_SetBit
  2740 ;; This function is called by:
  2741 ;;		_Lcd_Clear
  2742 ;;		_Lcd_Set_Cursor
  2743 ;;		_Lcd_Start
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747     0348                     _Lcd_Cmd:	
  2748                           ;psect for function _Lcd_Cmd
  2749                           
  2750                           
  2751                           ;incstack = 0
  2752                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2753                           ;Lcd_Cmd@a stored from wreg
  2754     0348  00F3               	movwf	Lcd_Cmd@a
  2755     0349                     l1195:
  2756                           
  2757                           ;WNB.c: 103: void Lcd_Cmd(char a);WNB.c: 104:  {;WNB.c: 105:     RD2 = 0;
  2758     0349  1283               	bcf	3,5	;RP0=0, select bank0
  2759     034A  1303               	bcf	3,6	;RP1=0, select bank0
  2760     034B  1108               	bcf	8,2	;volatile
  2761     034C                     l1197:
  2762                           
  2763                           ;WNB.c: 106:     Lcd_SetBit(a);
  2764     034C  0873               	movf	Lcd_Cmd@a,w
  2765     034D  120A  118A  2381  120A  118A  	fcall	_Lcd_SetBit
  2766     0352                     l1199:
  2767                           
  2768                           ;WNB.c: 107:     RD3 = 1;
  2769     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2770     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2771     0354  1588               	bsf	8,3	;volatile
  2772     0355                     l1201:
  2773                           
  2774                           ;WNB.c: 108:     _delay((unsigned long)((4)*(20000000/4000.0)));
  2775     0355  301A               	movlw	26
  2776     0356  00F2               	movwf	??_Lcd_Cmd+1
  2777     0357  30F8               	movlw	248
  2778     0358  00F1               	movwf	??_Lcd_Cmd
  2779     0359                     u1167:
  2780     0359  0BF1               	decfsz	??_Lcd_Cmd,f
  2781     035A  2B59               	goto	u1167
  2782     035B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2783     035C  2B59               	goto	u1167
  2784     035D  0000               	nop
  2785     035E                     l1203:
  2786                           
  2787                           ;WNB.c: 109:     RD3 = 0;
  2788     035E  1283               	bcf	3,5	;RP0=0, select bank0
  2789     035F  1303               	bcf	3,6	;RP1=0, select bank0
  2790     0360  1188               	bcf	8,3	;volatile
  2791     0361                     l96:
  2792     0361  0008               	return
  2793     0362                     __end_of_Lcd_Cmd:
  2794                           
  2795                           	psect	text14
  2796     0381                     __ptext14:	
  2797 ;; *************** function _Lcd_SetBit *****************
  2798 ;; Defined at:
  2799 ;;		line 79 in file "WNB.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  data_bit        1    wreg     unsigned char 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  data_bit        1    0[COMMON] unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      void 
  2806 ;; Registers used:
  2807 ;;		wreg
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2813 ;;      Params:         0       0       0       0       0
  2814 ;;      Locals:         1       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0
  2816 ;;      Totals:         1       0       0       0       0
  2817 ;;Total ram usage:        1 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_Lcd_Cmd
  2823 ;;		_Lcd_Start
  2824 ;;		_Lcd_Print_Char
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828     0381                     _Lcd_SetBit:	
  2829                           ;psect for function _Lcd_SetBit
  2830                           
  2831                           
  2832                           ;incstack = 0
  2833                           ; Regs used in _Lcd_SetBit: [wreg]
  2834                           ;Lcd_SetBit@data_bit stored from wreg
  2835     0381  00F0               	movwf	Lcd_SetBit@data_bit
  2836     0382                     l1185:
  2837                           
  2838                           ;WNB.c: 79: void Lcd_SetBit(char data_bit);WNB.c: 80:  {;WNB.c: 82:     if (data_bit & 1
      +                          )
  2839     0382  1C70               	btfss	Lcd_SetBit@data_bit,0
  2840     0383  2B85               	goto	u481
  2841     0384  2B86               	goto	u480
  2842     0385                     u481:
  2843     0385  2B8A               	goto	l85
  2844     0386                     u480:
  2845     0386                     l1187:
  2846                           
  2847                           ;WNB.c: 83:         RD4 = 1;
  2848     0386  1283               	bcf	3,5	;RP0=0, select bank0
  2849     0387  1303               	bcf	3,6	;RP1=0, select bank0
  2850     0388  1608               	bsf	8,4	;volatile
  2851     0389  2B8D               	goto	l86
  2852     038A                     l85:	
  2853                           ;WNB.c: 84:     else
  2854                           
  2855                           
  2856                           ;WNB.c: 85:         RD4 = 0;
  2857     038A  1283               	bcf	3,5	;RP0=0, select bank0
  2858     038B  1303               	bcf	3,6	;RP1=0, select bank0
  2859     038C  1208               	bcf	8,4	;volatile
  2860     038D                     l86:
  2861                           
  2862                           ;WNB.c: 87:     if (data_bit & 2)
  2863     038D  1CF0               	btfss	Lcd_SetBit@data_bit,1
  2864     038E  2B90               	goto	u491
  2865     038F  2B91               	goto	u490
  2866     0390                     u491:
  2867     0390  2B93               	goto	l87
  2868     0391                     u490:
  2869     0391                     l1189:
  2870                           
  2871                           ;WNB.c: 88:         RD5 = 1;
  2872     0391  1688               	bsf	8,5	;volatile
  2873     0392  2B94               	goto	l88
  2874     0393                     l87:	
  2875                           ;WNB.c: 89:     else
  2876                           
  2877                           
  2878                           ;WNB.c: 90:         RD5 = 0;
  2879     0393  1288               	bcf	8,5	;volatile
  2880     0394                     l88:
  2881                           
  2882                           ;WNB.c: 92:     if (data_bit & 4)
  2883     0394  1D70               	btfss	Lcd_SetBit@data_bit,2
  2884     0395  2B97               	goto	u501
  2885     0396  2B98               	goto	u500
  2886     0397                     u501:
  2887     0397  2B9A               	goto	l89
  2888     0398                     u500:
  2889     0398                     l1191:
  2890                           
  2891                           ;WNB.c: 93:         RD6 = 1;
  2892     0398  1708               	bsf	8,6	;volatile
  2893     0399  2B9B               	goto	l90
  2894     039A                     l89:	
  2895                           ;WNB.c: 94:     else
  2896                           
  2897                           
  2898                           ;WNB.c: 95:         RD6 = 0;
  2899     039A  1308               	bcf	8,6	;volatile
  2900     039B                     l90:
  2901                           
  2902                           ;WNB.c: 97:     if (data_bit & 8)
  2903     039B  1DF0               	btfss	Lcd_SetBit@data_bit,3
  2904     039C  2B9E               	goto	u511
  2905     039D  2B9F               	goto	u510
  2906     039E                     u511:
  2907     039E  2BA1               	goto	l91
  2908     039F                     u510:
  2909     039F                     l1193:
  2910                           
  2911                           ;WNB.c: 98:         RD7 = 1;
  2912     039F  1788               	bsf	8,7	;volatile
  2913     03A0  2BA2               	goto	l93
  2914     03A1                     l91:	
  2915                           ;WNB.c: 99:     else
  2916                           
  2917                           
  2918                           ;WNB.c: 100:         RD7 = 0;
  2919     03A1  1388               	bcf	8,7	;volatile
  2920     03A2                     l93:
  2921     03A2  0008               	return
  2922     03A3                     __end_of_Lcd_SetBit:
  2923                           
  2924                           	psect	text15
  2925     02FE                     __ptext15:	
  2926 ;; *************** function _Initialize_SIM900 *****************
  2927 ;; Defined at:
  2928 ;;		line 189 in file "WNB.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;		None
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0
  2945 ;;      Totals:         0       0       0       0       0
  2946 ;;Total ram usage:        0 bytes
  2947 ;; Hardware stack levels used: 1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955     02FE                     _Initialize_SIM900:	
  2956                           ;psect for function _Initialize_SIM900
  2957                           
  2958     02FE                     l1011:	
  2959                           ;incstack = 0
  2960                           ; Regs used in _Initialize_SIM900: [wreg]
  2961                           
  2962                           
  2963                           ;WNB.c: 192:     TRISC6 = 0;
  2964     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2965     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2966     0300  1307               	bcf	7,6	;volatile
  2967                           
  2968                           ;WNB.c: 193:     TRISC7 = 1;
  2969     0301  1787               	bsf	7,7	;volatile
  2970     0302                     l1013:
  2971                           
  2972                           ;WNB.c: 202:     SPBRG = 129;
  2973     0302  3081               	movlw	129
  2974     0303  0099               	movwf	25	;volatile
  2975     0304                     l1015:
  2976                           
  2977                           ;WNB.c: 203:     BRGH = 1;
  2978     0304  1518               	bsf	24,2	;volatile
  2979     0305                     l1017:
  2980                           
  2981                           ;WNB.c: 211:     SYNC = 0;
  2982     0305  1218               	bcf	24,4	;volatile
  2983     0306                     l1019:
  2984                           
  2985                           ;WNB.c: 212:     SPEN = 1;
  2986     0306  1283               	bcf	3,5	;RP0=0, select bank0
  2987     0307  1303               	bcf	3,6	;RP1=0, select bank0
  2988     0308  1798               	bsf	24,7	;volatile
  2989     0309                     l1021:
  2990                           
  2991                           ;WNB.c: 218:     TXEN = 1;
  2992     0309  1683               	bsf	3,5	;RP0=1, select bank1
  2993     030A  1303               	bcf	3,6	;RP1=0, select bank1
  2994     030B  1698               	bsf	24,5	;volatile
  2995     030C                     l1023:
  2996                           
  2997                           ;WNB.c: 219:     CREN = 1;
  2998     030C  1283               	bcf	3,5	;RP0=0, select bank0
  2999     030D  1303               	bcf	3,6	;RP1=0, select bank0
  3000     030E  1618               	bsf	24,4	;volatile
  3001     030F                     l1025:
  3002                           
  3003                           ;WNB.c: 225:     TX9 = 0;
  3004     030F  1683               	bsf	3,5	;RP0=1, select bank1
  3005     0310  1303               	bcf	3,6	;RP1=0, select bank1
  3006     0311  1318               	bcf	24,6	;volatile
  3007     0312                     l1027:
  3008                           
  3009                           ;WNB.c: 226:     RX9 = 0;
  3010     0312  1283               	bcf	3,5	;RP0=0, select bank0
  3011     0313  1303               	bcf	3,6	;RP1=0, select bank0
  3012     0314  1318               	bcf	24,6	;volatile
  3013     0315                     l126:
  3014     0315  0008               	return
  3015     0316                     __end_of_Initialize_SIM900:
  3016                           
  3017                           	psect	text16
  3018     04FF                     __ptext16:	
  3019 ;; *************** function _Config *****************
  3020 ;; Defined at:
  3021 ;;		line 402 in file "WNB.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;		None
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;		None
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         0       0       0       0       0
  3037 ;;      Temps:          3       0       0       0       0
  3038 ;;      Totals:         3       0       0       0       0
  3039 ;;Total ram usage:        3 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 2
  3042 ;; This function calls:
  3043 ;;		__SIM900_print
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049     04FF                     _Config:	
  3050                           ;psect for function _Config
  3051                           
  3052     04FF                     l1395:	
  3053                           ;incstack = 0
  3054                           ; Regs used in _Config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3055                           
  3056                           
  3057                           ;WNB.c: 404:     _delay((unsigned long)((2000)*(20000000/4000.0)));
  3058     04FF  3033               	movlw	51
  3059     0500  00F5               	movwf	??_Config+2
  3060     0501  30BB               	movlw	187
  3061     0502  00F4               	movwf	??_Config+1
  3062     0503  30DF               	movlw	223
  3063     0504  00F3               	movwf	??_Config
  3064     0505                     u1177:
  3065     0505  0BF3               	decfsz	??_Config,f
  3066     0506  2D05               	goto	u1177
  3067     0507  0BF4               	decfsz	??_Config+1,f
  3068     0508  2D05               	goto	u1177
  3069     0509  0BF5               	decfsz	??_Config+2,f
  3070     050A  2D05               	goto	u1177
  3071     050B  2D0C               	nop2
  3072     050C                     l1397:
  3073                           
  3074                           ;WNB.c: 405:     _SIM900_print("ATE0\r\n");
  3075     050C  30B7               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3076     050D  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  3077     0512                     l1399:
  3078                           
  3079                           ;WNB.c: 406:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  3080     0512  301A               	movlw	26
  3081     0513  00F5               	movwf	??_Config+2
  3082     0514  305E               	movlw	94
  3083     0515  00F4               	movwf	??_Config+1
  3084     0516  306E               	movlw	110
  3085     0517  00F3               	movwf	??_Config
  3086     0518                     u1187:
  3087     0518  0BF3               	decfsz	??_Config,f
  3088     0519  2D18               	goto	u1187
  3089     051A  0BF4               	decfsz	??_Config+1,f
  3090     051B  2D18               	goto	u1187
  3091     051C  0BF5               	decfsz	??_Config+2,f
  3092     051D  2D18               	goto	u1187
  3093     051E  0000               	nop
  3094                           
  3095                           ;WNB.c: 407:     _SIM900_print("AT\r\n");
  3096     051F  30CB               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3097     0520  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  3098     0525                     l1401:
  3099                           
  3100                           ;WNB.c: 408:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  3101     0525  301A               	movlw	26
  3102     0526  00F5               	movwf	??_Config+2
  3103     0527  305E               	movlw	94
  3104     0528  00F4               	movwf	??_Config+1
  3105     0529  306E               	movlw	110
  3106     052A  00F3               	movwf	??_Config
  3107     052B                     u1197:
  3108     052B  0BF3               	decfsz	??_Config,f
  3109     052C  2D2B               	goto	u1197
  3110     052D  0BF4               	decfsz	??_Config+1,f
  3111     052E  2D2B               	goto	u1197
  3112     052F  0BF5               	decfsz	??_Config+2,f
  3113     0530  2D2B               	goto	u1197
  3114     0531  0000               	nop
  3115     0532                     l1403:
  3116                           
  3117                           ;WNB.c: 409:     _SIM900_print("AT+CMGF=1\r\n");
  3118     0532  3095               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3119     0533  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  3120                           
  3121                           ;WNB.c: 410:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  3122     0538  301A               	movlw	26
  3123     0539  00F5               	movwf	??_Config+2
  3124     053A  305E               	movlw	94
  3125     053B  00F4               	movwf	??_Config+1
  3126     053C  306E               	movlw	110
  3127     053D  00F3               	movwf	??_Config
  3128     053E                     u1207:
  3129     053E  0BF3               	decfsz	??_Config,f
  3130     053F  2D3E               	goto	u1207
  3131     0540  0BF4               	decfsz	??_Config+1,f
  3132     0541  2D3E               	goto	u1207
  3133     0542  0BF5               	decfsz	??_Config+2,f
  3134     0543  2D3E               	goto	u1207
  3135     0544  0000               	nop
  3136     0545                     l1405:
  3137                           
  3138                           ;WNB.c: 411:     _SIM900_print("AT+CNMI=1,2,0,0,0\r\n");
  3139     0545  300D               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  3140     0546  120A  118A  2362  120A  118A  	fcall	__SIM900_print
  3141     054B                     l1407:
  3142                           
  3143                           ;WNB.c: 412:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  3144     054B  301A               	movlw	26
  3145     054C  00F5               	movwf	??_Config+2
  3146     054D  305E               	movlw	94
  3147     054E  00F4               	movwf	??_Config+1
  3148     054F  306E               	movlw	110
  3149     0550  00F3               	movwf	??_Config
  3150     0551                     u1217:
  3151     0551  0BF3               	decfsz	??_Config,f
  3152     0552  2D51               	goto	u1217
  3153     0553  0BF4               	decfsz	??_Config+1,f
  3154     0554  2D51               	goto	u1217
  3155     0555  0BF5               	decfsz	??_Config+2,f
  3156     0556  2D51               	goto	u1217
  3157     0557  0000               	nop
  3158     0558                     l191:
  3159     0558  0008               	return
  3160     0559                     __end_of_Config:
  3161                           
  3162                           	psect	text17
  3163     0362                     __ptext17:	
  3164 ;; *************** function __SIM900_print *****************
  3165 ;; Defined at:
  3166 ;;		line 282 in file "WNB.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  ptr             1    wreg     PTR const unsigned char 
  3169 ;;		 -> STR_18(20), STR_17(12), STR_16(5), STR_15(7), 
  3170 ;;		 -> STR_2(11), STR_1(5), 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  ptr             1    2[COMMON] PTR const unsigned char 
  3173 ;;		 -> STR_18(20), STR_17(12), STR_16(5), STR_15(7), 
  3174 ;;		 -> STR_2(11), STR_1(5), 
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       0       0
  3185 ;;      Locals:         1       0       0       0       0
  3186 ;;      Temps:          1       0       0       0       0
  3187 ;;      Totals:         2       0       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 1
  3191 ;; This function calls:
  3192 ;;		__SIM900_putch
  3193 ;; This function is called by:
  3194 ;;		_SIM900_isStarted
  3195 ;;		_SIM900_isReady
  3196 ;;		_Config
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200     0362                     __SIM900_print:	
  3201                           ;psect for function __SIM900_print
  3202                           
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in __SIM900_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3206                           ;__SIM900_print@ptr stored from wreg
  3207     0362  00F2               	movwf	__SIM900_print@ptr
  3208     0363                     l1283:
  3209                           
  3210                           ;WNB.c: 282: void _SIM900_print(unsigned const char *ptr);WNB.c: 283: {;WNB.c: 284:     
      +                          while (*ptr != 0)
  3211     0363  2B74               	goto	l1289
  3212     0364                     l1285:
  3213                           
  3214                           ;WNB.c: 285:     {;WNB.c: 286:         _SIM900_putch(*ptr++);
  3215     0364  0872               	movf	__SIM900_print@ptr,w
  3216     0365  0084               	movwf	4
  3217     0366  120A  118A  200D  120A  118A  	fcall	stringdir
  3218     036B  120A  118A  22C6  120A  118A  	fcall	__SIM900_putch
  3219     0370                     l1287:
  3220     0370  3001               	movlw	1
  3221     0371  00F1               	movwf	??__SIM900_print
  3222     0372  0871               	movf	??__SIM900_print,w
  3223     0373  07F2               	addwf	__SIM900_print@ptr,f
  3224     0374                     l1289:
  3225                           
  3226                           ;WNB.c: 284:     while (*ptr != 0)
  3227     0374  0872               	movf	__SIM900_print@ptr,w
  3228     0375  0084               	movwf	4
  3229     0376  120A  118A  200D  120A  118A  	fcall	stringdir
  3230     037B  3A00               	xorlw	0
  3231     037C  1D03               	skipz
  3232     037D  2B7F               	goto	u651
  3233     037E  2B80               	goto	u650
  3234     037F                     u651:
  3235     037F  2B64               	goto	l1285
  3236     0380                     u650:
  3237     0380                     l151:
  3238     0380  0008               	return
  3239     0381                     __end_of__SIM900_print:
  3240                           
  3241                           	psect	text18
  3242     02C6                     __ptext18:	
  3243 ;; *************** function __SIM900_putch *****************
  3244 ;; Defined at:
  3245 ;;		line 238 in file "WNB.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  bt              1    wreg     unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;  bt              1    0[COMMON] unsigned char 
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3259 ;;      Params:         0       0       0       0       0
  3260 ;;      Locals:         1       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0
  3262 ;;      Totals:         1       0       0       0       0
  3263 ;;Total ram usage:        1 bytes
  3264 ;; Hardware stack levels used: 1
  3265 ;; This function calls:
  3266 ;;		Nothing
  3267 ;; This function is called by:
  3268 ;;		__SIM900_print
  3269 ;;		_SIM900_send_string
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273     02C6                     __SIM900_putch:	
  3274                           ;psect for function __SIM900_putch
  3275                           
  3276                           
  3277                           ;incstack = 0
  3278                           ; Regs used in __SIM900_putch: [wreg]
  3279                           ;__SIM900_putch@bt stored from wreg
  3280     02C6  00F0               	movwf	__SIM900_putch@bt
  3281     02C7                     l893:
  3282     02C7                     l129:	
  3283                           ;WNB.c: 238: void _SIM900_putch(char bt);WNB.c: 239:  {;WNB.c: 240:     while (!TXIF);
  3284                           
  3285     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  3286     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  3287     02C9  1E0C               	btfss	12,4	;volatile
  3288     02CA  2ACC               	goto	u151
  3289     02CB  2ACD               	goto	u150
  3290     02CC                     u151:
  3291     02CC  2AC7               	goto	l129
  3292     02CD                     u150:
  3293     02CD                     l895:
  3294                           
  3295                           ;WNB.c: 241:     TXREG = bt;
  3296     02CD  0870               	movf	__SIM900_putch@bt,w
  3297     02CE  0099               	movwf	25	;volatile
  3298     02CF                     l132:
  3299     02CF  0008               	return
  3300     02D0                     __end_of__SIM900_putch:
  3301     007E                     btemp	set	126	;btemp
  3302     007E                     wtemp0	set	126
  3303                           
  3304                           	psect	idloc
  3305                           
  3306                           ;Config register IDLOC0 @ 0x2000
  3307                           ;	unspecified, using default values
  3308     2000                     	org	8192
  3309     2000  3FFF               	dw	16383
  3310                           
  3311                           ;Config register IDLOC1 @ 0x2001
  3312                           ;	unspecified, using default values
  3313     2001                     	org	8193
  3314     2001  3FFF               	dw	16383
  3315                           
  3316                           ;Config register IDLOC2 @ 0x2002
  3317                           ;	unspecified, using default values
  3318     2002                     	org	8194
  3319     2002  3FFF               	dw	16383
  3320                           
  3321                           ;Config register IDLOC3 @ 0x2003
  3322                           ;	unspecified, using default values
  3323     2003                     	org	8195
  3324     2003  3FFF               	dw	16383
  3325                           
  3326                           	psect	config
  3327                           
  3328                           ;Config register CONFIG @ 0x2007
  3329                           ;	Oscillator Selection bits
  3330                           ;	FOSC = HS, HS oscillator
  3331                           ;	Watchdog Timer Enable bit
  3332                           ;	WDTE = OFF, WDT disabled
  3333                           ;	Power-up Timer Enable bit
  3334                           ;	PWRTE = OFF, PWRT disabled
  3335                           ;	Brown-out Reset Enable bit
  3336                           ;	BOREN = OFF, BOR disabled
  3337                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3338                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3339                           ;	Data EEPROM Memory Code Protection bit
  3340                           ;	CPD = OFF, Data EEPROM code protection off
  3341                           ;	Flash Program Memory Write Enable bits
  3342                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3343                           ;	In-Circuit Debugger Mode bit
  3344                           ;	DEBUG = 0x1, unprogrammed default
  3345                           ;	Flash Program Memory Code Protection bit
  3346                           ;	CP = OFF, Code protection off
  3347     2007                     	org	8199
  3348     2007  3F3A               	dw	16186

Data Sizes:
    Strings     203
    Constant    12
    Data        7
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      62
    BANK1            80      0      40
    BANK3            96      0      60
    BANK2            96      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 1
		 -> STR_21(CODE[1]), STR_20(CODE[1]), STR_19(CODE[1]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 60
		 -> MsgTxt(BANK1[40]), MsgMob(BANK0[15]), RcvdMsg(BANK3[60]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 60
		 -> MsgTxt(BANK1[40]), MsgMob(BANK0[15]), RcvdMsg(BANK3[60]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 60
		 -> MsgTxt(BANK1[40]), MsgMob(BANK0[15]), RcvdMsg(BANK3[60]), 

    _SIM900_waitResponse@strings	PTR const unsigned char [6] size(1) Largest target is 13
		 -> STR_8(CODE[7]), STR_7(CODE[11]), STR_6(CODE[5]), STR_5(CODE[6]), 
		 -> STR_4(CODE[13]), STR_3(CODE[3]), 

    _SIM900_waitResponse@F1194	PTR const unsigned char [6] size(1) Largest target is 13
		 -> STR_8(CODE[7]), STR_7(CODE[11]), STR_6(CODE[5]), STR_5(CODE[6]), 
		 -> STR_4(CODE[13]), STR_3(CODE[3]), 

    _SIM900_print@ptr	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_18(CODE[20]), STR_17(CODE[12]), STR_16(CODE[5]), STR_15(CODE[7]), 
		 -> STR_2(CODE[11]), STR_1(CODE[5]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 40
		 -> MsgTxt(BANK1[40]), MsgMob(BANK0[15]), STR_14(CODE[18]), STR_13(CODE[17]), 
		 -> STR_12(CODE[17]), STR_11(CODE[17]), STR_10(CODE[17]), STR_9(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _SIM900_isStarted->__SIM900_print
    _SIM900_isReady->__SIM900_print
    _ClearBuffers->_Lcd_Print_String
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _Config->__SIM900_print
    __SIM900_print->__SIM900_putch

Critical Paths under _main in BANK0

    _SIM900_isStarted->__SIM900_waitResponse
    _SIM900_isReady->__SIM900_waitResponse
    _ClearBuffers->_Lcd_Print_String

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6427
                                             16 BANK0      3     3      0
                             _Config
                  _Initialize_SIM900
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                             _RecSMS
                     _SIM900_isReady
                   _SIM900_isStarted
 ---------------------------------------------------------------------------------
 (1) _SIM900_isStarted                                     4     2      2     647
                                              3 COMMON     4     2      2
                      __SIM900_print
               __SIM900_waitResponse
 ---------------------------------------------------------------------------------
 (1) _SIM900_isReady                                       4     2      2     647
                                              3 COMMON     4     2      2
                      __SIM900_print
               __SIM900_waitResponse
 ---------------------------------------------------------------------------------
 (2) __SIM900_waitResponse                                17    17      0     389
                                              0 COMMON     1     1      0
                                              0 BANK0     16    16      0
                      __SIM900_getch
 ---------------------------------------------------------------------------------
 (1) _RecSMS                                               1     1      0    2565
                                              2 BANK0      1     1      0
                       _ClearBuffers
                      __SIM900_getch
 ---------------------------------------------------------------------------------
 (3) __SIM900_getch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffers                                         0     0      0    2565
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               6     3      3     499
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     988
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Print_String                                     7     5      2     968
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (5) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Initialize_SIM900                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Config                                               3     3      0     258
                                              3 COMMON     3     3      0
                      __SIM900_print
 ---------------------------------------------------------------------------------
 (2) __SIM900_print                                        2     2      0     258
                                              1 COMMON     2     2      0
                      __SIM900_putch
 ---------------------------------------------------------------------------------
 (3) __SIM900_putch                                        1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Config
     __SIM900_print
       __SIM900_putch
   _Initialize_SIM900
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Start
     _Lcd_Cmd
     _Lcd_SetBit
   _RecSMS
     _ClearBuffers
       _Lcd_Clear
       _Lcd_Print_String
       _Lcd_Set_Cursor
       _strcpy
     __SIM900_getch
   _SIM900_isReady
     __SIM900_print
     __SIM900_waitResponse
       __SIM900_getch
   _SIM900_isStarted
     __SIM900_print
     __SIM900_waitResponse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      3C       9       62.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      28       7       50.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      B0      12        0.0%
ABS                  0      0      B0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun May 21 15:58:31 2023

                                     _p 005D                                       _x 0032  
                                     pc 0002                                      l90 039B  
                                    l91 03A1                                      l93 03A2  
                                    l85 038A                                      l86 038D  
                                    l87 0393                                      l88 0394  
                                    l96 0361                                      l89 039A  
                                    l99 02DC                                      fsr 0004  
                                   l110 04A7                                     l113 0578  
                                   l105 0452                                     l114 058C  
                                   l210 07D3                                     l115 059C  
                                   l123 040C                                     l203 077A  
                                   l132 02CF                                     l116 05B0  
                                   l117 05B3                                     l213 04FE  
                                   l126 0315                                     l151 0380  
                                   l136 02E5                                     l129 02C7  
                                   l154 0347                                     l139 02EA  
                                   l157 032E                                     l191 0558  
                                   l176 062C                                     l753 03C6  
                                   l893 02C7                                     l895 02CD  
                                   _RD2 0042                                     _RD3 0043  
                                   _RD4 0044                                     _RD5 0045  
                                   _RD6 0046                                     _RD7 0047  
                 __end_of__SIM900_getch 02EB                                     u150 02CD  
                                   u151 02CC                                     u500 0398  
                                   u501 0397                                     u510 039F  
                                   u511 039E                                     u600 03FA  
                                   u530 058C                                     u610 040C  
                                   u531 058B                                     u611 040B  
                                   u540 05B0                                     u620 02E3  
                                   u700 062B                                     u541 05AF  
                                   u525 0566                                     u621 02E2  
                                   u701 062A                                     u550 0413  
                                   u630 02E9                                     u710 0340  
                                   u535 0588                                     u551 0412  
                                   u631 02E8                                     u711 033E  
                                   u480 0386                                     u720 0341  
                                   u481 0385                                     u545 05AC  
                                   u650 0380                                     u490 0391  
                                   u570 0436                                     u730 0327  
                                   u651 037F                                     u491 0390  
                                   u571 0435                                     u731 0325  
                                   u660 05B8                                     u740 0328  
                                   u565 0419                                     u590 03D6  
                                   u670 05F4                                     u671 05F3  
                                   u680 060D                                     u585 043C  
                                   u681 060C                                     u930 03C6  
                                   u690 0626                                     u931 03C5  
                                   u691 0625                                     u940 06ED  
                                   u941 06EC                                     u950 06FB  
                                   u951 06FA                                     u960 0705  
                                   u961 0704                                     _RX9 00C6  
                                   u970 070B                                     u971 070A  
                                   u980 0715                                     u981 0714  
                                   u990 071C                                     u991 071B  
                                   _TX9 04C6                   __end_of__SIM900_print 0381  
                                   fsr0 0004                   __end_of__SIM900_putch 02D0  
                                   indf 0000                                    l1011 02FE  
                                  l1021 0309                                    l1013 0302  
                                  l1023 030C                                    l1015 0304  
                                  l1025 030F                                    l1017 0305  
                                  l1201 0355                                    l1027 0312  
                                  l1019 0306                                    l1203 035E  
                                  l1211 0571                                    l1221 057F  
                                  l1213 0574                                    l1205 055A  
                                  l1223 058F                                    l1207 0560  
                                  l1311 060D                                    l1401 0525  
                                  l1233 059D                                    l1225 0595  
                                  l1209 0563                                    l1241 0413  
                                  l1313 0616                                    l1305 05DE  
                                  l1321 0626                                    l1403 0532  
                                  l1235 05A3                                    l1227 0598  
                                  l1219 0579                                    l1251 0436  
                                  l1243 0420                                    l1323 062B  
                                  l1307 05F4                                    l1315 0618  
                                  l1405 0545                                    l1237 02D0  
                                  l1261 03CC                                    l1253 0443  
                                  l1245 0423                                    l1317 061C  
                                  l1309 05FB                                    l1407 054B  
                                  l1191 0398                                    l1351 0459  
                                  l1263 03E8                                    l1255 0446  
                                  l1247 0429                                    l1239 040E  
                                  l1271 02E9                                    l1319 0620  
                                  l1193 039F                                    l1185 0382  
                                  l1361 0459                                    l1353 0459  
                                  l1265 03F0                                    l1257 044C  
                                  l1249 0430                                    l1601 0752  
                                  l1283 0363                                    l1187 0386  
                                  l1195 0349                                    l1371 0483  
                                  l1363 045F                                    l1259 03C7  
                                  l1531 03A3                                    l1267 02DD  
                                  l1611 076E                                    l1603 0759  
                                  l1291 05B4                                    l1285 0364  
                                  l1189 0391                                    l1197 034C  
                                  l1381 04A1                                    l1373 0489  
                                  l1365 0468                                    l1349 0453  
                                  l1533 03A8                                    l1541 04B5  
                                  l1269 02E3                                    l1613 0770  
                                  l1605 075B                                    l1293 05BD  
                                  l1287 0370                                    l1199 0352  
                                  l1375 048F                                    l1367 0477  
                                  l1535 03AE                                    l1551 04E0  
                                  l1543 04BE                                    l1631 07AC  
                                  l1623 0784                                    l1615 0778  
                                  l1607 0761                                    l1295 05D2  
                                  l1391 031C                                    l1383 032F  
                                  l1289 0374                                    l1377 0495  
                                  l1369 047D                                    l1537 03B2  
                                  l1553 04E2                                    l1545 04CF  
                                  l1633 07BA                                    l1625 0792  
                                  l1617 0780                                    l1609 0767  
                                  l1561 06E7                                    l1297 05D5  
                                  l1385 0335                                    l1641 0630  
                                  l1395 04FF                                    l1379 049B  
                                  l1555 04E4                                    l1547 04DA  
                                  l1539 04A8                                    l1635 07C0  
                                  l1627 0798                                    l1571 0705  
                                  l1563 06ED                                    l1299 05DD  
                                  l1651 0653                                    l1643 0635  
                                  l1397 050C                                    l1557 04EF  
                                  l1549 04DE                                    l1637 07CE  
                                  l1629 07A5                                    l1581 0720  
                                  l1573 070B                                    l1565 06F5  
                                  l1389 0316                                    l1661 0687  
                                  l1653 065C                                    l1645 063A  
                                  l1399 0512                                    l1559 04FA  
                                  l1591 073A                                    l1583 0726  
                                  l1575 070F                                    l1567 06FB  
                                  l1671 06B4                                    l1663 068F  
                                  l1655 0667                                    l1647 0642  
                                  l1639 062D                                    l1593 073E  
                                  l1585 072D                                    l1577 0715  
                                  l1569 06FF                                    l1681 06DE  
                                  l1673 06C3                                    l1665 0698  
                                  l1657 066F                                    l1649 064B  
                                  l1595 0740                                    l1587 0731  
                                  l1579 071C                                    l1675 06C8  
                                  l1667 06A3                                    l1659 0678  
                                  l1597 0746                                    l1589 0738  
                                  l1677 06CD                                    l1669 06AB  
                                  l1599 074C                                    l1679 06D5  
                                  STR_1 00DD                                    STR_2 00B3  
                                  STR_3 00E7                                    STR_4 009A  
                                  STR_5 00D7                                    STR_6 00E2  
                                  STR_7 00BE                                    STR_8 00D0  
                                  STR_9 0045                                    _BRGH 04C2  
                                  u1000 0726                                    _CREN 00C4  
                                  u1001 0725                                    u1010 072D  
                                  u1011 072C                                    u1020 0738  
                                  u1100 0667                                    u1021 0737  
                                  u1101 0666                                    u1030 0746  
                                  u1110 06A3                                    u1031 0745  
                                  u1111 06A2                                    u1040 074C  
                                  u1041 074B                                    u1050 0759  
                                  u1051 0758                                    u1060 076E  
                                  u1061 076D                                    u1070 0780  
                                  u1207 053E                                    u1071 077F  
                                  u1127 0680                                    u1080 07A5  
                                  u1217 0551                                    u1081 07A4  
                                  u1137 06BC                                    u1090 07CE  
                                  u1147 0463                                    u1091 07CD  
                                  u1157 0472                                    u1085 07A1  
                                  u1167 0359                                    u1095 07CA  
                                  u1177 0505                                    u1187 0518  
                                  u1197 052B                                    _RCIF 0065  
                                  _OERR 00C1                                    _SPEN 00C7  
                                  _TXEN 04C5                                    _TXIF 0064  
                                  _SYNC 04C4                                    _main 062D  
                                  _recv 0026                                    btemp 007E  
                                  start 0000                      Lcd_Print_Char@data 0074  
                       __end_of_Lcd_Cmd 0362                        _SIM900_isStarted 032F  
                            _Lcd_SetBit 0381                                   ?_main 0070  
                                 STR_10 0089                                   STR_11 0078  
                                 STR_20 0032                                   STR_12 0067  
                                 STR_21 0032                                   STR_13 0056  
                                 STR_14 0033                                   STR_15 00C9  
                                 STR_16 00DD                                   STR_17 00A7  
                                 STR_18 001F                                   STR_19 0032  
                                 _RCREG 001A                                   _SPBRG 0099  
                                 _TRISD 0088                                   _TXREG 0019  
                                 _index 002C                                   pclath 000A  
                   Lcd_Print_Char@i_109 0077                                   status 0003  
                                 wtemp0 007E                         __initialization 07D4  
                          __end_of_main 06E7                                  ??_main 0054  
                             ??_Lcd_Cmd 0071                                  _TRISC6 043E  
                                _TRISC7 043F                                  _Config 04FF  
                                _RecSMS 06E7                                  _MsgMob 0035  
                                _MsgTxt 00A0                             ?_Lcd_SetBit 0070  
                                _strcpy 03A3                            _ClearBuffers 04A8  
                       Lcd_Set_Cursor@a 0076                         Lcd_Set_Cursor@b 0074  
                       Lcd_Set_Cursor@y 0078                         Lcd_Set_Cursor@z 0077  
               __end_of__initialization 07FC                       __end_of_Lcd_Clear 02DD  
                     __end_of_Lcd_Start 04A8                          __pcstackCOMMON 0070  
                          __pidataBANK0 02B7                          _Lcd_Set_Cursor 040D  
              __end_of_SIM900_isStarted 0348                              __pbssBANK0 0020  
                            __pbssBANK1 00A0                              __pbssBANK3 0190  
                      _Lcd_Print_String 03C7                          _Lcd_Print_Char 0559  
                               ?_Config 0070                                 ?_RecSMS 0070  
                            __pmaintext 062D                      Lcd_SetBit@data_bit 0070  
                __end_of_Lcd_Set_Cursor 0453                                 ?_strcpy 0070  
                            __stringtab 0003                         Lcd_Print_Char@i 0075  
                               _Lcd_Cmd 0348                  __end_of_Lcd_Print_Char 05B4  
                               _IncData 0034                  __SIM900_waitResponse@i 0053  
                               _RcvdEnd 002A                                 _RcvdMsg 0190  
                       ?_Lcd_Set_Cursor 0074                                 __ptext1 032F  
                               __ptext2 0316                                 __ptext3 05B4  
                               __ptext4 06E7                                 __ptext5 02DD  
                               __ptext6 04A8                                 __ptext7 03A3  
                               __ptext8 040D                                 __ptext9 03C7  
          __end_of__SIM900_waitResponse 062D                                 clrloop0 02BF  
                  end_of_initialization 07FC                         ?_Lcd_Print_Char 0070  
            __SIM900_waitResponse@F1191 0020              __SIM900_waitResponse@F1194 0057  
                          ??_Lcd_SetBit 0070                           __SIM900_getch 02DD  
                         __SIM900_print 0362                           __SIM900_putch 02C6  
                        _SIM900_isReady 0316                      __end_of_Lcd_SetBit 03A3  
                        __end_of_Config 0559                          __end_of_RecSMS 07D4  
                             _Lcd_Clear 02D0                               _Lcd_Start 0453  
              __end_of_Lcd_Print_String 040D                          ?__SIM900_getch 0070  
         __SIM900_waitResponse@received 0050                          ?__SIM900_print 0070  
                        __end_of_strcpy 03C7                          ?__SIM900_putch 0070  
                   start_initialization 07D4           __SIM900_waitResponse@response 0051  
                __end_of_SIM900_isReady 032F                       ?_SIM900_isStarted 0073  
                             _MsgLength 0028                      ??_SIM900_isStarted 0075  
                             _RcvdCheck 0030                       Lcd_Print_String@a 0079  
                     Lcd_Print_String@i 0044                                ??_Config 0073  
                              ??_RecSMS 0046             __SIM900_waitResponse@so_far 004A  
                  __SIM900_waitResponse 05B4                              ?_Lcd_Clear 0070  
                            init_fetch0 02EB                              ?_Lcd_Start 0070  
                           __pdataBANK0 0057              Lcd_Print_Char@Lower_Nibble 0072  
                              ??_strcpy 0073                               ___latbits 0002  
                         __pcstackBANK0 0044                         ?_SIM900_isReady 0073  
                              ?_Lcd_Cmd 0070                   ?__SIM900_waitResponse 0070  
                      ??_Lcd_Set_Cursor 0075                       _Initialize_SIM900 02FE  
                       ??__SIM900_getch 0070                               __pstrings 0003  
                       ??__SIM900_print 0071                         ??__SIM900_putch 0070  
                    ?_Initialize_SIM900 0070                     ??_Initialize_SIM900 0070  
                      ??_Lcd_Print_Char 0071                               clear_ram0 02BE  
    __SIM900_waitResponse@continue_loop 0052                                Lcd_Cmd@a 0073  
__end_of__SIM900_waitResponse@responses 0019          __SIM900_waitResponse@responses 0013  
                           ??_Lcd_Clear 0074               __end_of_Initialize_SIM900 0316  
                           ??_Lcd_Start 0074                             __stringbase 0012  
                         ?_ClearBuffers 0070    __end_of__SIM900_waitResponse@lengths 001F  
          __SIM900_waitResponse@lengths 0019                  ??__SIM900_waitResponse 0070  
                              _RcvdConf 002E            __SIM900_waitResponse@strings 0044  
                        ??_ClearBuffers 007E                      __end_of__stringtab 0013  
                     ?_Lcd_Print_String 0079                      ??_Lcd_Print_String 007B  
                              __ptext10 0559                                __ptext11 02D0  
                              __ptext12 0453                                __ptext13 0348  
                              __ptext14 0381                                __ptext15 02FE  
                              __ptext16 04FF                                __ptext17 0362  
                              __ptext18 02C6                              strcpy@from 0072  
            Lcd_Print_Char@Upper_Nibble 0073                        ??_SIM900_isReady 0075  
                              init_ram0 02EF                               stringcode 000D  
                    Lcd_Set_Cursor@temp 0079                       __SIM900_print@ptr 0072  
                              strcpy@cp 0074                                strcpy@to 0070  
                              stringdir 000D                                stringtab 0003  
                      __SIM900_putch@bt 0070                    __end_of_ClearBuffers 04FF  
